{"cells":[{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\n\n#REMOVE DUMMIES FROM COMMENT\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","execution_count":111,"outputs":[{"output_type":"stream","text":"/kaggle/input/home-credit-default-risk/previous_application.csv\n/kaggle/input/home-credit-default-risk/installments_payments.csv\n/kaggle/input/home-credit-default-risk/credit_card_balance.csv\n/kaggle/input/home-credit-default-risk/application_train.csv\n/kaggle/input/home-credit-default-risk/bureau.csv\n/kaggle/input/home-credit-default-risk/application_test.csv\n/kaggle/input/home-credit-default-risk/HomeCredit_columns_description.csv\n/kaggle/input/home-credit-default-risk/bureau_balance.csv\n/kaggle/input/home-credit-default-risk/POS_CASH_balance.csv\n/kaggle/input/home-credit-default-risk/sample_submission.csv\n","name":"stdout"}]},{"metadata":{"_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","trusted":true},"cell_type":"code","source":"bureau = pd.read_csv('../input/home-credit-default-risk/bureau.csv')\nbureau_bal = pd.read_csv('../input/home-credit-default-risk/bureau_balance.csv')","execution_count":112,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau.head()","execution_count":113,"outputs":[{"output_type":"execute_result","execution_count":113,"data":{"text/plain":"   SK_ID_CURR  SK_ID_BUREAU CREDIT_ACTIVE CREDIT_CURRENCY  DAYS_CREDIT  \\\n0      215354       5714462        Closed      currency 1         -497   \n1      215354       5714463        Active      currency 1         -208   \n2      215354       5714464        Active      currency 1         -203   \n3      215354       5714465        Active      currency 1         -203   \n4      215354       5714466        Active      currency 1         -629   \n\n   CREDIT_DAY_OVERDUE  DAYS_CREDIT_ENDDATE  DAYS_ENDDATE_FACT  \\\n0                   0               -153.0             -153.0   \n1                   0               1075.0                NaN   \n2                   0                528.0                NaN   \n3                   0                  NaN                NaN   \n4                   0               1197.0                NaN   \n\n   AMT_CREDIT_MAX_OVERDUE  CNT_CREDIT_PROLONG  AMT_CREDIT_SUM  \\\n0                     NaN                   0         91323.0   \n1                     NaN                   0        225000.0   \n2                     NaN                   0        464323.5   \n3                     NaN                   0         90000.0   \n4                 77674.5                   0       2700000.0   \n\n   AMT_CREDIT_SUM_DEBT  AMT_CREDIT_SUM_LIMIT  AMT_CREDIT_SUM_OVERDUE  \\\n0                  0.0                   NaN                     0.0   \n1             171342.0                   NaN                     0.0   \n2                  NaN                   NaN                     0.0   \n3                  NaN                   NaN                     0.0   \n4                  NaN                   NaN                     0.0   \n\n       CREDIT_TYPE  DAYS_CREDIT_UPDATE  AMT_ANNUITY  \n0  Consumer credit                -131          NaN  \n1      Credit card                 -20          NaN  \n2  Consumer credit                 -16          NaN  \n3      Credit card                 -16          NaN  \n4  Consumer credit                 -21          NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>SK_ID_BUREAU</th>\n      <th>CREDIT_ACTIVE</th>\n      <th>CREDIT_CURRENCY</th>\n      <th>DAYS_CREDIT</th>\n      <th>CREDIT_DAY_OVERDUE</th>\n      <th>DAYS_CREDIT_ENDDATE</th>\n      <th>DAYS_ENDDATE_FACT</th>\n      <th>AMT_CREDIT_MAX_OVERDUE</th>\n      <th>CNT_CREDIT_PROLONG</th>\n      <th>AMT_CREDIT_SUM</th>\n      <th>AMT_CREDIT_SUM_DEBT</th>\n      <th>AMT_CREDIT_SUM_LIMIT</th>\n      <th>AMT_CREDIT_SUM_OVERDUE</th>\n      <th>CREDIT_TYPE</th>\n      <th>DAYS_CREDIT_UPDATE</th>\n      <th>AMT_ANNUITY</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>215354</td>\n      <td>5714462</td>\n      <td>Closed</td>\n      <td>currency 1</td>\n      <td>-497</td>\n      <td>0</td>\n      <td>-153.0</td>\n      <td>-153.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>91323.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Consumer credit</td>\n      <td>-131</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>215354</td>\n      <td>5714463</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-208</td>\n      <td>0</td>\n      <td>1075.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>225000.0</td>\n      <td>171342.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Credit card</td>\n      <td>-20</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>215354</td>\n      <td>5714464</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-203</td>\n      <td>0</td>\n      <td>528.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>464323.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Consumer credit</td>\n      <td>-16</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>215354</td>\n      <td>5714465</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-203</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>90000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Credit card</td>\n      <td>-16</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>215354</td>\n      <td>5714466</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-629</td>\n      <td>0</td>\n      <td>1197.0</td>\n      <td>NaN</td>\n      <td>77674.5</td>\n      <td>0</td>\n      <td>2700000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Consumer credit</td>\n      <td>-21</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau.shape","execution_count":114,"outputs":[{"output_type":"execute_result","execution_count":114,"data":{"text/plain":"(1716428, 17)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"previous_loans = bureau.groupby('SK_ID_CURR',as_index = False)['SK_ID_BUREAU'].count()","execution_count":115,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"previous_loans.head()","execution_count":116,"outputs":[{"output_type":"execute_result","execution_count":116,"data":{"text/plain":"   SK_ID_CURR  SK_ID_BUREAU\n0      100001             7\n1      100002             8\n2      100003             4\n3      100004             2\n4      100005             3","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>SK_ID_BUREAU</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>100001</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>100002</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>100003</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>100004</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>100005</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"previous_loans.rename(columns = {'SK_ID_BUREAU':'previous_loans'},inplace = True)","execution_count":117,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train = pd.read_csv('../input/home-credit-default-risk/application_train.csv')\n","execution_count":118,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train.shape","execution_count":119,"outputs":[{"output_type":"execute_result","execution_count":119,"data":{"text/plain":"(307511, 122)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train = train.merge(previous_loans, on = 'SK_ID_CURR', how = 'left')","execution_count":120,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"previous_loans.head(3)","execution_count":121,"outputs":[{"output_type":"execute_result","execution_count":121,"data":{"text/plain":"   SK_ID_CURR  previous_loans\n0      100001               7\n1      100002               8\n2      100003               4","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>previous_loans</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>100001</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>100002</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>100003</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train['previous_loans'] = train['previous_loans'].fillna(0)","execution_count":122,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"data_corr = train.corr()","execution_count":123,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"data_corr['TARGET'].head()","execution_count":124,"outputs":[{"output_type":"execute_result","execution_count":124,"data":{"text/plain":"SK_ID_CURR         -0.002108\nTARGET              1.000000\nCNT_CHILDREN        0.019187\nAMT_INCOME_TOTAL   -0.003982\nAMT_CREDIT         -0.030369\nName: TARGET, dtype: float64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"corr_tar = data_corr['TARGET'].sort_values(ascending = False)","execution_count":125,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"corr_tar['previous_loans']","execution_count":126,"outputs":[{"output_type":"execute_result","execution_count":126,"data":{"text/plain":"-0.01001971567071046"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def kde_target(df,var_name):\n    corr = df['TARGET'].corr(df[var_name])\n    avg_repaid = df.loc[df['TARGET'] == 0, var_name].median()\n    avg_not_repaid = df.loc[df['TARGET'] == 1,var_name].median()\n    plt.figure(figsize = (12,8))\n    sns.kdeplot(df.loc[df['TARGET'] == 0, var_name],label = 'target = 0')\n    sns.kdeplot(df.loc[df['TARGET'] == 1, var_name],label = 'target = 1')\n    plt.xlabel('var_name')\n    plt.ylabel('Density')\n    print('Correlation of variable is %0.4f'%(corr))\n    print('Average value for defaulters is %0.4f'%(avg_not_repaid))\n    print('Average value for non defaulters is %0.4f'%(avg_repaid))","execution_count":127,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"kde_target(train,'previous_loans')","execution_count":128,"outputs":[{"output_type":"stream","text":"Correlation of variable is -0.0100\nAverage value for defaulters is 3.0000\nAverage value for non defaulters is 4.0000\n","name":"stdout"},{"output_type":"display_data","data":{"text/plain":"<Figure size 864x576 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAtcAAAHgCAYAAABuGUHVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAgAElEQVR4nOzdeZTc5X3n+/fTi9TqllpqtSQkJKQWSCCxGBCyDcbGmWCPccIy42tnYMg2G9cHe5LMQobx3DPLSc4Z5tonZ5ITE4YJ8Z1McDyxHRMcYzue2InHYQnCCAxaQBtSCyS19qXV6q76PfePX1XTalV1t9T1q03v1zk6P1XVr6oelf/58PX3+T4hxogkSZKk6Wup9QIkSZKkZmG4liRJkirEcC1JkiRViOFakiRJqhDDtSRJklQhhmtJkiSpQtpqvYBKWrBgQezr66v1MiRJktTEXnrppYMxxoWlXmuqcN3X18eGDRtqvQxJkiQ1sRDCW+Vesy1EkiRJqhDDtSRJklQhhmtJkiSpQpqq51qSJOliNDIyQn9/P0NDQ7VeSlPp6Ohg2bJltLe3T/k9hmtJkqQG19/fz5w5c+jr6yOEUOvlNIUYI4cOHaK/v5+VK1dO+X22hUiSJDW4oaEhent7DdYVFEKgt7f3vP/fAMO1JElSEzBYV96F/KaGa0mSJE3L0aNHefTRR6vyXU899RSbNm2qyGd95zvf4aqrrmLVqlU88sgjFflMw7UkSZKm5ULCdYyRJEnO+7sqFa7z+Tyf+cxn+Pa3v82mTZv44z/+44p8ruFakiRJ0/Lwww+zfft2brjhBh566CFOnjzJ7bffzrp167juuuv4sz/7MwB27drF2rVrefDBB1m3bh179uzhN37jN1izZg0f/ehHue+++/jCF74AwPbt27njjju46aab+NCHPsSWLVt49tlnefrpp3nooYe44YYb2L59+wWv+W//9m9ZtWoVl19+OTNmzODee+8dXed0OC1EkiSpifynb77OprePV/Qzr760m/9w1zVlX3/kkUd47bXX2LhxIwC5XI5vfOMbdHd3c/DgQW6++WbuvvtuALZu3cqXvvQlHn30UTZs2MDXv/51Xn75ZXK5HOvWreOmm24C4IEHHuCxxx5j9erVvPDCCzz44IN8//vf5+677+bOO+/kk5/85DnrePLJJ/n85z9/zvOrVq3ia1/72lnP7d27l8suu2z08bJly3jhhRfO/8cZx3AtSZKkioox8rnPfY4f/vCHtLS0sHfvXvbv3w/AihUruPnmmwH40Y9+xD333MOsWbMAuOuuuwA4efIkzz77LJ/61KdGP/PMmTOTfu/999/P/fffP+U1jleJTaGGa0mSpCYyUYW5Wp588kkGBgZ46aWXaG9vp6+vb3SkXVdX1+h9pQIuQJIkzJs3b7QSfj7fO9XK9bJly9izZ8/o4/7+fi699NLz+r5S7LmWJEnStMyZM4cTJ06MPj527BiLFi2ivb2dH/zgB7z11lsl3/fBD36Qb37zmwwNDXHy5Em+9a1vAdDd3c3KlSv56le/CqQh/JVXXin5XWPdf//9bNy48Zw/44M1wHvf+17efPNNdu7cyfDwMF/5yldGW1emw3AtSZKkaent7eXWW2/l2muv5aGHHuL+++9nw4YNrF+/nieffJI1a9aUfN973/te7r77bq6//no+8YlPsH79eubOnQukVegnnniC66+/nmuuuWZ0s+G9997L5z//eW688cZpbWhsa2vjd3/3d/nYxz7G2rVr+bmf+zmuuWb6Vf9QrhzfiNavXx83bNhQ62VIkiRV1ebNm1m7dm2tl3FBTp48yezZsxkcHOS2227j8ccfZ926dbVe1qhSv20I4aUY4/pS99tzLUmSpJp54IEH2LRpE0NDQ/zSL/1SXQXrC2G4rrb8CIRWaLEjR5Ik6ctf/nKtl1BRJrxq+28fhv/zhVqvQpIkSRkwXFfTyBAceB0OvlnrlUiSJCkDhutqOr43vZ6p7KlJkiRJqg+G62o6VhhUPmS4liRJakaG62o6WgzXx2q7DkmSpAo6evQojz76aFW+66mnnmLTpk0V+ax//I//MYsWLeLaa6+tyOeB4bq6jvWnV9tCJElSE7mQcB1jJEmS8/6uSobrX/7lX+Y73/lORT6ryHBdTbaFSJKkJvTwww+zfft2brjhBh566CFOnjzJ7bffzrp167juuutGT1fctWsXa9eu5cEHH2TdunXs2bOH3/iN32DNmjV89KMf5b777uMLX0inqm3fvp077riDm266iQ996ENs2bKFZ599lqeffpqHHnqIG264YVonNALcdtttzJ8/f9r//rGcc11NxXB95jgkibOuJUlS5X37Ydj3k8p+5uLr4OOPlH35kUce4bXXXmPjxo0A5HI5vvGNb9Dd3c3Bgwe5+eabufvuuwHYunUrX/rSl3j00UfZsGEDX//613n55ZfJ5XKsW7eOm266CUgPl3nsscdYvXo1L7zwAg8++CDf//73ufvuu7nzzjv55Cc/ec46nnzyST7/+c+f8/yqVav42te+VolfYlKG62oq9lwTYfgEdMyt6XIkSZKyEGPkc5/7HD/84Q9paWlh79697N+/H4AVK1Zw8803A/CjH/2Ie+65h1mzZgFw1113AemR6M8++yyf+tSnRj/zzJkzk37v/fffz/3331/pf855MVxXS5Kko/hmzYfTh9PWEMO1JEmqtAkqzNXy5JNPMjAwwEsvvUR7ezt9fX0MDQ0B0NXVNXpfjLHk+5MkYd68eaOV8PP53lpXru1LqJZTByA/DJdckz52U6MkSWoSc+bM4cSJE6OPjx07xqJFi2hvb+cHP/gBb731Vsn3ffCDH+Sb3/wmQ0NDnDx5km9961sAdHd3s3LlSr761a8CaQh/5ZVXSn7XWPfffz8bN24850+1gjUYrqunOCnkksKoF8fxSZKkJtHb28utt97Ktddey0MPPcT999/Phg0bWL9+PU8++SRr1qwp+b73vve93H333Vx//fV84hOfYP369cydm/4/+08++SRPPPEE119/Pddcc83opsh7772Xz3/+89x4443T3tB43333ccstt7B161aWLVvGE088Ma3PAwjlyvGNaP369XHDhg21XkZpr/0pfO0fwd2/C09/Fu77X3DVHbVelSRJagKbN29m7dq1tV7GBTl58iSzZ89mcHCQ2267jccff5x169bVelmjSv22IYSXYozrS91vz3W1jFaur06vtoVIkiTxwAMPsGnTJoaGhvilX/qlugrWF8JwXS3H9sDMbph7WfrYthBJkiS+/OUv13oJFWXPdbUc60+D9czu9LHhWpIkqekYrqvl6B6YuwzaO6B1pm0hkiSpopppH129uJDf1HBdLcf2wLxCS0hHt0egS5Kkiuno6ODQoUMG7AqKMXLo0CE6OjrO6332XFfDmRMwdDStXEN6eIxtIZIkqUKWLVtGf38/AwMDtV5KU+no6GDZsmXn9Z5Mw3UI4Q7gt4FW4PdjjI+Me30N8CVgHfDvYoxfGPd6K7AB2BtjvDPLtWaqOCmkuJlxZrdtIZIkqWLa29tZuXJlrZch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\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau.dtypes.value_counts()","execution_count":129,"outputs":[{"output_type":"execute_result","execution_count":129,"data":{"text/plain":"float64    8\nint64      6\nobject     3\ndtype: int64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau.head(4)","execution_count":130,"outputs":[{"output_type":"execute_result","execution_count":130,"data":{"text/plain":"   SK_ID_CURR  SK_ID_BUREAU CREDIT_ACTIVE CREDIT_CURRENCY  DAYS_CREDIT  \\\n0      215354       5714462        Closed      currency 1         -497   \n1      215354       5714463        Active      currency 1         -208   \n2      215354       5714464        Active      currency 1         -203   \n3      215354       5714465        Active      currency 1         -203   \n\n   CREDIT_DAY_OVERDUE  DAYS_CREDIT_ENDDATE  DAYS_ENDDATE_FACT  \\\n0                   0               -153.0             -153.0   \n1                   0               1075.0                NaN   \n2                   0                528.0                NaN   \n3                   0                  NaN                NaN   \n\n   AMT_CREDIT_MAX_OVERDUE  CNT_CREDIT_PROLONG  AMT_CREDIT_SUM  \\\n0                     NaN                   0         91323.0   \n1                     NaN                   0        225000.0   \n2                     NaN                   0        464323.5   \n3                     NaN                   0         90000.0   \n\n   AMT_CREDIT_SUM_DEBT  AMT_CREDIT_SUM_LIMIT  AMT_CREDIT_SUM_OVERDUE  \\\n0                  0.0                   NaN                     0.0   \n1             171342.0                   NaN                     0.0   \n2                  NaN                   NaN                     0.0   \n3                  NaN                   NaN                     0.0   \n\n       CREDIT_TYPE  DAYS_CREDIT_UPDATE  AMT_ANNUITY  \n0  Consumer credit                -131          NaN  \n1      Credit card                 -20          NaN  \n2  Consumer credit                 -16          NaN  \n3      Credit card                 -16          NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>SK_ID_BUREAU</th>\n      <th>CREDIT_ACTIVE</th>\n      <th>CREDIT_CURRENCY</th>\n      <th>DAYS_CREDIT</th>\n      <th>CREDIT_DAY_OVERDUE</th>\n      <th>DAYS_CREDIT_ENDDATE</th>\n      <th>DAYS_ENDDATE_FACT</th>\n      <th>AMT_CREDIT_MAX_OVERDUE</th>\n      <th>CNT_CREDIT_PROLONG</th>\n      <th>AMT_CREDIT_SUM</th>\n      <th>AMT_CREDIT_SUM_DEBT</th>\n      <th>AMT_CREDIT_SUM_LIMIT</th>\n      <th>AMT_CREDIT_SUM_OVERDUE</th>\n      <th>CREDIT_TYPE</th>\n      <th>DAYS_CREDIT_UPDATE</th>\n      <th>AMT_ANNUITY</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>215354</td>\n      <td>5714462</td>\n      <td>Closed</td>\n      <td>currency 1</td>\n      <td>-497</td>\n      <td>0</td>\n      <td>-153.0</td>\n      <td>-153.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>91323.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Consumer credit</td>\n      <td>-131</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>215354</td>\n      <td>5714463</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-208</td>\n      <td>0</td>\n      <td>1075.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>225000.0</td>\n      <td>171342.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Credit card</td>\n      <td>-20</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>215354</td>\n      <td>5714464</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-203</td>\n      <td>0</td>\n      <td>528.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>464323.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Consumer credit</td>\n      <td>-16</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>215354</td>\n      <td>5714465</td>\n      <td>Active</td>\n      <td>currency 1</td>\n      <td>-203</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>90000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Credit card</td>\n      <td>-16</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"overdue = bureau.loc[bureau['CREDIT_DAY_OVERDUE'] > 0]","execution_count":131,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"currency_types = bureau['CNT_CREDIT_PROLONG'].unique()","execution_count":132,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"prolong = bureau.loc[bureau['CNT_CREDIT_PROLONG'] > 0]","execution_count":133,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau['CNT_CREDIT_PROLONG'].value_counts()","execution_count":134,"outputs":[{"output_type":"execute_result","execution_count":134,"data":{"text/plain":"0    1707314\n1       7620\n2       1222\n3        191\n4         54\n5         21\n9          2\n6          2\n8          1\n7          1\nName: CNT_CREDIT_PROLONG, dtype: int64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_agg = bureau.drop(columns = ['SK_ID_BUREAU'])","execution_count":135,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_agg = bureau_agg.groupby('SK_ID_CURR',as_index = False).agg(['count','mean','max','min','sum']).reset_index()","execution_count":136,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_agg.head()","execution_count":137,"outputs":[{"output_type":"execute_result","execution_count":137,"data":{"text/plain":"  SK_ID_CURR DAYS_CREDIT                               CREDIT_DAY_OVERDUE  \\\n                   count         mean  max   min   sum              count   \n0     100001           7  -735.000000  -49 -1572 -5145                  7   \n1     100002           8  -874.000000 -103 -1437 -6992                  8   \n2     100003           4 -1400.750000 -606 -2586 -5603                  4   \n3     100004           2  -867.000000 -408 -1326 -1734                  2   \n4     100005           3  -190.666667  -62  -373  -572                  3   \n\n                ... DAYS_CREDIT_UPDATE                               \\\n  mean max min  ...              count        mean  max   min   sum   \n0  0.0   0   0  ...                  7  -93.142857   -6  -155  -652   \n1  0.0   0   0  ...                  8 -499.875000   -7 -1185 -3999   \n2  0.0   0   0  ...                  4 -816.000000  -43 -2131 -3264   \n3  0.0   0   0  ...                  2 -532.000000 -382  -682 -1064   \n4  0.0   0   0  ...                  3  -54.333333  -11  -121  -163   \n\n  AMT_ANNUITY                                      \n        count         mean      max  min      sum  \n0           7  3545.357143  10822.5  0.0  24817.5  \n1           7     0.000000      0.0  0.0      0.0  \n2           0          NaN      NaN  NaN      0.0  \n3           0          NaN      NaN  NaN      0.0  \n4           3  1420.500000   4261.5  0.0   4261.5  \n\n[5 rows x 61 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th colspan=\"5\" halign=\"left\">DAYS_CREDIT</th>\n      <th colspan=\"4\" halign=\"left\">CREDIT_DAY_OVERDUE</th>\n      <th>...</th>\n      <th colspan=\"5\" halign=\"left\">DAYS_CREDIT_UPDATE</th>\n      <th colspan=\"5\" halign=\"left\">AMT_ANNUITY</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>max</th>\n      <th>min</th>\n      <th>sum</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>max</th>\n      <th>min</th>\n      <th>...</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>max</th>\n      <th>min</th>\n      <th>sum</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>max</th>\n      <th>min</th>\n      <th>sum</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>100001</td>\n      <td>7</td>\n      <td>-735.000000</td>\n      <td>-49</td>\n      <td>-1572</td>\n      <td>-5145</td>\n      <td>7</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>7</td>\n      <td>-93.142857</td>\n      <td>-6</td>\n      <td>-155</td>\n      <td>-652</td>\n      <td>7</td>\n      <td>3545.357143</td>\n      <td>10822.5</td>\n      <td>0.0</td>\n      <td>24817.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>100002</td>\n      <td>8</td>\n      <td>-874.000000</td>\n      <td>-103</td>\n      <td>-1437</td>\n      <td>-6992</td>\n      <td>8</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>8</td>\n      <td>-499.875000</td>\n      <td>-7</td>\n      <td>-1185</td>\n      <td>-3999</td>\n      <td>7</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>100003</td>\n      <td>4</td>\n      <td>-1400.750000</td>\n      <td>-606</td>\n      <td>-2586</td>\n      <td>-5603</td>\n      <td>4</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>4</td>\n      <td>-816.000000</td>\n      <td>-43</td>\n      <td>-2131</td>\n      <td>-3264</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>100004</td>\n      <td>2</td>\n      <td>-867.000000</td>\n      <td>-408</td>\n      <td>-1326</td>\n      <td>-1734</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>2</td>\n      <td>-532.000000</td>\n      <td>-382</td>\n      <td>-682</td>\n      <td>-1064</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>100005</td>\n      <td>3</td>\n      <td>-190.666667</td>\n      <td>-62</td>\n      <td>-373</td>\n      <td>-572</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>3</td>\n      <td>-54.333333</td>\n      <td>-11</td>\n      <td>-121</td>\n      <td>-163</td>\n      <td>3</td>\n      <td>1420.500000</td>\n      <td>4261.5</td>\n      <td>0.0</td>\n      <td>4261.5</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 61 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"columns = ['SK_ID_CURR']\nfor var in bureau_agg.columns.levels[0]:\n    if var!='SK_ID_CURR':\n        for stat in bureau_agg.columns.levels[1][:-1]:\n            columns.append('bureau_%s_%s'%(var,stat))","execution_count":138,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_agg.columns = columns","execution_count":139,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train = train.merge(bureau_agg,on = 'SK_ID_CURR',how = 'left')\ntrain.head()","execution_count":140,"outputs":[{"output_type":"execute_result","execution_count":140,"data":{"text/plain":"   SK_ID_CURR  TARGET NAME_CONTRACT_TYPE CODE_GENDER FLAG_OWN_CAR  \\\n0      100002       1         Cash loans           M            N   \n1      100003       0         Cash loans           F            N   \n2      100004       0    Revolving loans           M            Y   \n3      100006       0         Cash loans           F            N   \n4      100007       0         Cash loans           M            N   \n\n  FLAG_OWN_REALTY  CNT_CHILDREN  AMT_INCOME_TOTAL  AMT_CREDIT  AMT_ANNUITY  \\\n0               Y             0          202500.0    406597.5      24700.5   \n1               N             0          270000.0   1293502.5      35698.5   \n2               Y             0           67500.0    135000.0       6750.0   \n3               Y             0          135000.0    312682.5      29686.5   \n4               Y             0          121500.0    513000.0      21865.5   \n\n   ...  bureau_DAYS_CREDIT_UPDATE_count bureau_DAYS_CREDIT_UPDATE_mean  \\\n0  ...                              8.0                       -499.875   \n1  ...                              4.0                       -816.000   \n2  ...                              2.0                       -532.000   \n3  ...                              NaN                            NaN   \n4  ...                              1.0                       -783.000   \n\n  bureau_DAYS_CREDIT_UPDATE_max bureau_DAYS_CREDIT_UPDATE_min  \\\n0                          -7.0                       -1185.0   \n1                         -43.0                       -2131.0   \n2                        -382.0                        -682.0   \n3                           NaN                           NaN   \n4                        -783.0                        -783.0   \n\n  bureau_DAYS_CREDIT_UPDATE_sum bureau_AMT_ANNUITY_count  \\\n0                       -3999.0                      7.0   \n1                       -3264.0                      0.0   \n2                       -1064.0                      0.0   \n3                           NaN                      NaN   \n4                        -783.0                      0.0   \n\n   bureau_AMT_ANNUITY_mean  bureau_AMT_ANNUITY_max  bureau_AMT_ANNUITY_min  \\\n0                      0.0                     0.0                     0.0   \n1                      NaN                     NaN                     NaN   \n2                      NaN                     NaN                     NaN   \n3                      NaN                     NaN                     NaN   \n4                      NaN                     NaN                     NaN   \n\n   bureau_AMT_ANNUITY_sum  \n0                     0.0  \n1                     0.0  \n2                     0.0  \n3                     NaN  \n4                     0.0  \n\n[5 rows x 183 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>TARGET</th>\n      <th>NAME_CONTRACT_TYPE</th>\n      <th>CODE_GENDER</th>\n      <th>FLAG_OWN_CAR</th>\n      <th>FLAG_OWN_REALTY</th>\n      <th>CNT_CHILDREN</th>\n      <th>AMT_INCOME_TOTAL</th>\n      <th>AMT_CREDIT</th>\n      <th>AMT_ANNUITY</th>\n      <th>...</th>\n      <th>bureau_DAYS_CREDIT_UPDATE_count</th>\n      <th>bureau_DAYS_CREDIT_UPDATE_mean</th>\n      <th>bureau_DAYS_CREDIT_UPDATE_max</th>\n      <th>bureau_DAYS_CREDIT_UPDATE_min</th>\n      <th>bureau_DAYS_CREDIT_UPDATE_sum</th>\n      <th>bureau_AMT_ANNUITY_count</th>\n      <th>bureau_AMT_ANNUITY_mean</th>\n      <th>bureau_AMT_ANNUITY_max</th>\n      <th>bureau_AMT_ANNUITY_min</th>\n      <th>bureau_AMT_ANNUITY_sum</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>100002</td>\n      <td>1</td>\n      <td>Cash loans</td>\n      <td>M</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>0</td>\n      <td>202500.0</td>\n      <td>406597.5</td>\n      <td>24700.5</td>\n      <td>...</td>\n      <td>8.0</td>\n      <td>-499.875</td>\n      <td>-7.0</td>\n      <td>-1185.0</td>\n      <td>-3999.0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>100003</td>\n      <td>0</td>\n      <td>Cash loans</td>\n      <td>F</td>\n      <td>N</td>\n      <td>N</td>\n      <td>0</td>\n      <td>270000.0</td>\n      <td>1293502.5</td>\n      <td>35698.5</td>\n      <td>...</td>\n      <td>4.0</td>\n      <td>-816.000</td>\n      <td>-43.0</td>\n      <td>-2131.0</td>\n      <td>-3264.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>100004</td>\n      <td>0</td>\n      <td>Revolving loans</td>\n      <td>M</td>\n      <td>Y</td>\n      <td>Y</td>\n      <td>0</td>\n      <td>67500.0</td>\n      <td>135000.0</td>\n      <td>6750.0</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>-532.000</td>\n      <td>-382.0</td>\n      <td>-682.0</td>\n      <td>-1064.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>100006</td>\n      <td>0</td>\n      <td>Cash loans</td>\n      <td>F</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>0</td>\n      <td>135000.0</td>\n      <td>312682.5</td>\n      <td>29686.5</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>100007</td>\n      <td>0</td>\n      <td>Cash loans</td>\n      <td>M</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>0</td>\n      <td>121500.0</td>\n      <td>513000.0</td>\n      <td>21865.5</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>-783.000</td>\n      <td>-783.0</td>\n      <td>-783.0</td>\n      <td>-783.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 183 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"new_corrs = []\nfor col in columns:\n    corr = train['TARGET'].corr(train[col])\n    new_corrs.append([corr,col])\n","execution_count":141,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"new_corrs = sorted(new_corrs,key = lambda x:abs(x[0]),reverse = True)","execution_count":142,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"new_corrs[:15]","execution_count":143,"outputs":[{"output_type":"execute_result","execution_count":143,"data":{"text/plain":"[[0.08972896721998116, 'bureau_DAYS_CREDIT_mean'],\n [0.0752482510301037, 'bureau_DAYS_CREDIT_min'],\n [0.06892735266968673, 'bureau_DAYS_CREDIT_UPDATE_mean'],\n [0.05588737984392085, 'bureau_DAYS_ENDDATE_FACT_min'],\n [0.053734895601020544, 'bureau_DAYS_CREDIT_ENDDATE_sum'],\n [0.053199625857586336, 'bureau_DAYS_ENDDATE_FACT_mean'],\n [0.049782054639973074, 'bureau_DAYS_CREDIT_max'],\n [0.04885350261111597, 'bureau_DAYS_ENDDATE_FACT_sum'],\n [0.046982754334835404, 'bureau_DAYS_CREDIT_ENDDATE_mean'],\n [0.042863922470730204, 'bureau_DAYS_CREDIT_UPDATE_min'],\n [0.041999824814846765, 'bureau_DAYS_CREDIT_sum'],\n [0.04140363535306015, 'bureau_DAYS_CREDIT_UPDATE_sum'],\n [0.03658963469632896, 'bureau_DAYS_CREDIT_ENDDATE_max'],\n [0.034281109921615996, 'bureau_DAYS_CREDIT_ENDDATE_min'],\n [-0.03049230665332553, 'bureau_DAYS_ENDDATE_FACT_count']]"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print(train['TARGET'].corr(train['EXT_SOURCE_3']))","execution_count":144,"outputs":[{"output_type":"stream","text":"-0.17891869762837215\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"kde_target(train,'bureau_DAYS_CREDIT_mean')","execution_count":145,"outputs":[{"output_type":"stream","text":"Correlation of variable is 0.0897\nAverage value for defaulters is -835.3333\nAverage value for non defaulters is -1067.0000\n","name":"stdout"},{"output_type":"display_data","data":{"text/plain":"<Figure size 864x576 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical = pd.get_dummies(bureau.select_dtypes('object'))","execution_count":146,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical['SK_ID_CURR'] = bureau['SK_ID_CURR']","execution_count":147,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical.head()","execution_count":148,"outputs":[{"output_type":"execute_result","execution_count":148,"data":{"text/plain":"   CREDIT_ACTIVE_Active  CREDIT_ACTIVE_Bad debt  CREDIT_ACTIVE_Closed  \\\n0                     0                       0                     1   \n1                     1                       0                     0   \n2                     1                       0                     0   \n3                     1                       0                     0   \n4                     1                       0                     0   \n\n   CREDIT_ACTIVE_Sold  CREDIT_CURRENCY_currency 1  CREDIT_CURRENCY_currency 2  \\\n0                   0                           1                           0   \n1                   0                           1                           0   \n2                   0                           1                           0   \n3                   0                           1                           0   \n4                   0                           1                           0   \n\n   CREDIT_CURRENCY_currency 3  CREDIT_CURRENCY_currency 4  \\\n0                           0                           0   \n1                           0                           0   \n2                           0                           0   \n3                           0                           0   \n4                           0                           0   \n\n   CREDIT_TYPE_Another type of loan  CREDIT_TYPE_Car loan  ...  \\\n0                                 0                     0  ...   \n1                                 0                     0  ...   \n2                                 0                     0  ...   \n3                                 0                     0  ...   \n4                                 0                     0  ...   \n\n   CREDIT_TYPE_Loan for business development  \\\n0                                          0   \n1                                          0   \n2                                          0   \n3                                          0   \n4                                          0   \n\n   CREDIT_TYPE_Loan for purchase of shares (margin lending)  \\\n0                                                  0          \n1                                                  0          \n2                                                  0          \n3                                                  0          \n4                                                  0          \n\n   CREDIT_TYPE_Loan for the purchase of equipment  \\\n0                                               0   \n1                                               0   \n2                                               0   \n3                                               0   \n4                                               0   \n\n   CREDIT_TYPE_Loan for working capital replenishment  CREDIT_TYPE_Microloan  \\\n0                                                  0                       0   \n1                                                  0                       0   \n2                                                  0                       0   \n3                                                  0                       0   \n4                                                  0                       0   \n\n   CREDIT_TYPE_Mobile operator loan  CREDIT_TYPE_Mortgage  \\\n0                                 0                     0   \n1                                 0                     0   \n2                                 0                     0   \n3                                 0                     0   \n4                                 0                     0   \n\n   CREDIT_TYPE_Real estate loan  CREDIT_TYPE_Unknown type of loan  SK_ID_CURR  \n0                             0                                 0      215354  \n1                             0                                 0      215354  \n2                             0                                 0      215354  \n3                             0                                 0      215354  \n4                             0                                 0      215354  \n\n[5 rows x 24 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CREDIT_ACTIVE_Active</th>\n      <th>CREDIT_ACTIVE_Bad debt</th>\n      <th>CREDIT_ACTIVE_Closed</th>\n      <th>CREDIT_ACTIVE_Sold</th>\n      <th>CREDIT_CURRENCY_currency 1</th>\n      <th>CREDIT_CURRENCY_currency 2</th>\n      <th>CREDIT_CURRENCY_currency 3</th>\n      <th>CREDIT_CURRENCY_currency 4</th>\n      <th>CREDIT_TYPE_Another type of loan</th>\n      <th>CREDIT_TYPE_Car loan</th>\n      <th>...</th>\n      <th>CREDIT_TYPE_Loan for business development</th>\n      <th>CREDIT_TYPE_Loan for purchase of shares (margin lending)</th>\n      <th>CREDIT_TYPE_Loan for the purchase of equipment</th>\n      <th>CREDIT_TYPE_Loan for working capital replenishment</th>\n      <th>CREDIT_TYPE_Microloan</th>\n      <th>CREDIT_TYPE_Mobile operator loan</th>\n      <th>CREDIT_TYPE_Mortgage</th>\n      <th>CREDIT_TYPE_Real estate loan</th>\n      <th>CREDIT_TYPE_Unknown type of loan</th>\n      <th>SK_ID_CURR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>215354</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>215354</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>215354</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>215354</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>215354</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 24 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical.shape","execution_count":149,"outputs":[{"output_type":"execute_result","execution_count":149,"data":{"text/plain":"(1716428, 24)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical_grouped = categorical.groupby('SK_ID_CURR').agg(['sum','mean'])","execution_count":150,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical_grouped.head()","execution_count":151,"outputs":[{"output_type":"execute_result","execution_count":151,"data":{"text/plain":"           CREDIT_ACTIVE_Active           CREDIT_ACTIVE_Bad debt       \\\n                            sum      mean                    sum mean   \nSK_ID_CURR                                                              \n100001                        3  0.428571                      0  0.0   \n100002                        2  0.250000                      0  0.0   \n100003                        1  0.250000                      0  0.0   \n100004                        0  0.000000                      0  0.0   \n100005                        2  0.666667                      0  0.0   \n\n           CREDIT_ACTIVE_Closed           CREDIT_ACTIVE_Sold       \\\n                            sum      mean                sum mean   \nSK_ID_CURR                                                          \n100001                        4  0.571429                  0  0.0   \n100002                        6  0.750000                  0  0.0   \n100003                        3  0.750000                  0  0.0   \n100004                        2  1.000000                  0  0.0   \n100005                        1  0.333333                  0  0.0   \n\n           CREDIT_CURRENCY_currency 1       ... CREDIT_TYPE_Microloan       \\\n                                  sum mean  ...                   sum mean   \nSK_ID_CURR                                  ...                              \n100001                              7  1.0  ...                     0  0.0   \n100002                              8  1.0  ...                     0  0.0   \n100003                              4  1.0  ...                     0  0.0   \n100004                              2  1.0  ...                     0  0.0   \n100005                              3  1.0  ...                     0  0.0   \n\n           CREDIT_TYPE_Mobile operator loan      CREDIT_TYPE_Mortgage       \\\n                                        sum mean                  sum mean   \nSK_ID_CURR                                                                   \n100001                                    0  0.0                    0  0.0   \n100002                                    0  0.0                    0  0.0   \n100003                                    0  0.0                    0  0.0   \n100004                                    0  0.0                    0  0.0   \n100005                                    0  0.0                    0  0.0   \n\n           CREDIT_TYPE_Real estate loan      CREDIT_TYPE_Unknown type of loan  \\\n                                    sum mean                              sum   \nSK_ID_CURR                                                                      \n100001                                0  0.0                                0   \n100002                                0  0.0                                0   \n100003                                0  0.0                                0   \n100004                                0  0.0                                0   \n100005                                0  0.0                                0   \n\n                 \n           mean  \nSK_ID_CURR       \n100001      0.0  \n100002      0.0  \n100003      0.0  \n100004      0.0  \n100005      0.0  \n\n[5 rows x 46 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_ACTIVE_Active</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_ACTIVE_Bad debt</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_ACTIVE_Closed</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_ACTIVE_Sold</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_CURRENCY_currency 1</th>\n      <th>...</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_TYPE_Microloan</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_TYPE_Mobile operator loan</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_TYPE_Mortgage</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_TYPE_Real estate loan</th>\n      <th colspan=\"2\" halign=\"left\">CREDIT_TYPE_Unknown type of loan</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>...</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n      <th>sum</th>\n      <th>mean</th>\n    </tr>\n    <tr>\n      <th>SK_ID_CURR</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>100001</th>\n      <td>3</td>\n      <td>0.428571</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>4</td>\n      <td>0.571429</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100002</th>\n      <td>2</td>\n      <td>0.250000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>6</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100003</th>\n      <td>1</td>\n      <td>0.250000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>4</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100004</th>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100005</th>\n      <td>2</td>\n      <td>0.666667</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>0.333333</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 46 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"categorical_grouped.columns.levels[1]","execution_count":152,"outputs":[{"output_type":"execute_result","execution_count":152,"data":{"text/plain":"Index(['sum', 'mean'], dtype='object')"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"group_var = 'SK_ID_CURR'\ncols = []\nfor var in categorical_grouped.columns.levels[0]:\n    if var != group_var:\n        for stat in ['count','count_norm']:\n            cols.append('%s_%s'%(var,stat))\ncategorical_grouped.columns = cols\ncategorical_grouped.head()","execution_count":153,"outputs":[{"output_type":"execute_result","execution_count":153,"data":{"text/plain":"            CREDIT_ACTIVE_Active_count  CREDIT_ACTIVE_Active_count_norm  \\\nSK_ID_CURR                                                                \n100001                               3                         0.428571   \n100002                               2                         0.250000   \n100003                               1                         0.250000   \n100004                               0                         0.000000   \n100005                               2                         0.666667   \n\n            CREDIT_ACTIVE_Bad debt_count  CREDIT_ACTIVE_Bad debt_count_norm  \\\nSK_ID_CURR                                                                    \n100001                                 0                                0.0   \n100002                                 0                                0.0   \n100003                                 0                                0.0   \n100004                                 0                                0.0   \n100005                                 0                                0.0   \n\n            CREDIT_ACTIVE_Closed_count  CREDIT_ACTIVE_Closed_count_norm  \\\nSK_ID_CURR                                                                \n100001                               4                         0.571429   \n100002                               6                         0.750000   \n100003                               3                         0.750000   \n100004                               2                         1.000000   \n100005                               1                         0.333333   \n\n            CREDIT_ACTIVE_Sold_count  CREDIT_ACTIVE_Sold_count_norm  \\\nSK_ID_CURR                                                            \n100001                             0                            0.0   \n100002                             0                            0.0   \n100003                             0                            0.0   \n100004                             0                            0.0   \n100005                             0                            0.0   \n\n            CREDIT_CURRENCY_currency 1_count  \\\nSK_ID_CURR                                     \n100001                                     7   \n100002                                     8   \n100003                                     4   \n100004                                     2   \n100005                                     3   \n\n            CREDIT_CURRENCY_currency 1_count_norm  ...  \\\nSK_ID_CURR                                         ...   \n100001                                        1.0  ...   \n100002                                        1.0  ...   \n100003                                        1.0  ...   \n100004                                        1.0  ...   \n100005                                        1.0  ...   \n\n            CREDIT_TYPE_Microloan_count  CREDIT_TYPE_Microloan_count_norm  \\\nSK_ID_CURR                                                                  \n100001                                0                               0.0   \n100002                                0                               0.0   \n100003                                0                               0.0   \n100004                                0                               0.0   \n100005                                0                               0.0   \n\n            CREDIT_TYPE_Mobile operator loan_count  \\\nSK_ID_CURR                                           \n100001                                           0   \n100002                                           0   \n100003                                           0   \n100004                                           0   \n100005                                           0   \n\n            CREDIT_TYPE_Mobile operator loan_count_norm  \\\nSK_ID_CURR                                                \n100001                                              0.0   \n100002                                              0.0   \n100003                                              0.0   \n100004                                              0.0   \n100005                                              0.0   \n\n            CREDIT_TYPE_Mortgage_count  CREDIT_TYPE_Mortgage_count_norm  \\\nSK_ID_CURR                                                                \n100001                               0                              0.0   \n100002                               0                              0.0   \n100003                               0                              0.0   \n100004                               0                              0.0   \n100005                               0                              0.0   \n\n            CREDIT_TYPE_Real estate loan_count  \\\nSK_ID_CURR                                       \n100001                                       0   \n100002                                       0   \n100003                                       0   \n100004                                       0   \n100005                                       0   \n\n            CREDIT_TYPE_Real estate loan_count_norm  \\\nSK_ID_CURR                                            \n100001                                          0.0   \n100002                                          0.0   \n100003                                          0.0   \n100004                                          0.0   \n100005                                          0.0   \n\n            CREDIT_TYPE_Unknown type of loan_count  \\\nSK_ID_CURR                                           \n100001                                           0   \n100002                                           0   \n100003                                           0   \n100004                                           0   \n100005                                           0   \n\n            CREDIT_TYPE_Unknown type of loan_count_norm  \nSK_ID_CURR                                               \n100001                                              0.0  \n100002                                              0.0  \n100003                                              0.0  \n100004                                              0.0  \n100005                                              0.0  \n\n[5 rows x 46 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CREDIT_ACTIVE_Active_count</th>\n      <th>CREDIT_ACTIVE_Active_count_norm</th>\n      <th>CREDIT_ACTIVE_Bad debt_count</th>\n      <th>CREDIT_ACTIVE_Bad debt_count_norm</th>\n      <th>CREDIT_ACTIVE_Closed_count</th>\n      <th>CREDIT_ACTIVE_Closed_count_norm</th>\n      <th>CREDIT_ACTIVE_Sold_count</th>\n      <th>CREDIT_ACTIVE_Sold_count_norm</th>\n      <th>CREDIT_CURRENCY_currency 1_count</th>\n      <th>CREDIT_CURRENCY_currency 1_count_norm</th>\n      <th>...</th>\n      <th>CREDIT_TYPE_Microloan_count</th>\n      <th>CREDIT_TYPE_Microloan_count_norm</th>\n      <th>CREDIT_TYPE_Mobile operator loan_count</th>\n      <th>CREDIT_TYPE_Mobile operator loan_count_norm</th>\n      <th>CREDIT_TYPE_Mortgage_count</th>\n      <th>CREDIT_TYPE_Mortgage_count_norm</th>\n      <th>CREDIT_TYPE_Real estate loan_count</th>\n      <th>CREDIT_TYPE_Real estate loan_count_norm</th>\n      <th>CREDIT_TYPE_Unknown type of loan_count</th>\n      <th>CREDIT_TYPE_Unknown type of loan_count_norm</th>\n    </tr>\n    <tr>\n      <th>SK_ID_CURR</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>100001</th>\n      <td>3</td>\n      <td>0.428571</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>4</td>\n      <td>0.571429</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100002</th>\n      <td>2</td>\n      <td>0.250000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>6</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100003</th>\n      <td>1</td>\n      <td>0.250000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>4</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100004</th>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100005</th>\n      <td>2</td>\n      <td>0.666667</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>0.333333</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 46 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"#merge the dataframe into training\ntrain = train.merge(categorical_grouped,left_on = 'SK_ID_CURR',right_index = True,how = 'left')\n","execution_count":154,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train.shape","execution_count":155,"outputs":[{"output_type":"execute_result","execution_count":155,"data":{"text/plain":"(307511, 229)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def agg_numeric(df,group_var,df_name):\n    for col in df:\n        if col != group_var and 'SK_ID' in col:\n            df = df.drop(columns = col)\n    \n    group_ids = df[group_var]\n    numeric_df = df.select_dtypes('number')\n    numeric_df[group_var] = group_ids\n    agg = numeric_df.groupby(group_var).agg(['count','mean','max','min','sum']).reset_index()\n    columns = [group_var]\n    for var in agg.columns.levels[0]:\n        if var != group_var:\n            for stat in agg.columns.levels[1][:-1]:\n                columns.append('%s_%s_%s'%(df_name,var,stat))\n    agg.columns = columns\n    return agg","execution_count":156,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"def count_categorical(df,group_var,df_name):\n    categorical = pd.get_dummies(df.select_dtypes('object'))\n    categorical[group_var] = df[group_var]\n    categorical = categorical.groupby(group_var).agg(['sum','mean'])\n    column_names = []\n    for var in categorical.columns.levels[0]:\n        for stat in ['count','count_norm']:\n            column_names.append('%s_%s_%s' %(df_name,var,stat))\n    categorical.columns = column_names\n    return categorical\n            ","execution_count":157,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_counts = count_categorical(bureau,group_var = 'SK_ID_CURR',df_name = 'bureau')","execution_count":158,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_counts.head()","execution_count":159,"outputs":[{"output_type":"execute_result","execution_count":159,"data":{"text/plain":"            bureau_CREDIT_ACTIVE_Active_count  \\\nSK_ID_CURR                                      \n100001                                      3   \n100002                                      2   \n100003                                      1   \n100004                                      0   \n100005                                      2   \n\n            bureau_CREDIT_ACTIVE_Active_count_norm  \\\nSK_ID_CURR                                           \n100001                                    0.428571   \n100002                                    0.250000   \n100003                                    0.250000   \n100004                                    0.000000   \n100005                                    0.666667   \n\n            bureau_CREDIT_ACTIVE_Bad debt_count  \\\nSK_ID_CURR                                        \n100001                                        0   \n100002                                        0   \n100003                                        0   \n100004                                        0   \n100005                                        0   \n\n            bureau_CREDIT_ACTIVE_Bad debt_count_norm  \\\nSK_ID_CURR                                             \n100001                                           0.0   \n100002                                           0.0   \n100003                                           0.0   \n100004                                           0.0   \n100005                                           0.0   \n\n            bureau_CREDIT_ACTIVE_Closed_count  \\\nSK_ID_CURR                                      \n100001                                      4   \n100002                                      6   \n100003                                      3   \n100004                                      2   \n100005                                      1   \n\n            bureau_CREDIT_ACTIVE_Closed_count_norm  \\\nSK_ID_CURR                                           \n100001                                    0.571429   \n100002                                    0.750000   \n100003                                    0.750000   \n100004                                    1.000000   \n100005                                    0.333333   \n\n            bureau_CREDIT_ACTIVE_Sold_count  \\\nSK_ID_CURR                                    \n100001                                    0   \n100002                                    0   \n100003                                    0   \n100004                                    0   \n100005                                    0   \n\n            bureau_CREDIT_ACTIVE_Sold_count_norm  \\\nSK_ID_CURR                                         \n100001                                       0.0   \n100002                                       0.0   \n100003                                       0.0   \n100004                                       0.0   \n100005                                       0.0   \n\n            bureau_CREDIT_CURRENCY_currency 1_count  \\\nSK_ID_CURR                                            \n100001                                            7   \n100002                                            8   \n100003                                            4   \n100004                                            2   \n100005                                            3   \n\n            bureau_CREDIT_CURRENCY_currency 1_count_norm  ...  \\\nSK_ID_CURR                                                ...   \n100001                                               1.0  ...   \n100002                                               1.0  ...   \n100003                                               1.0  ...   \n100004                                               1.0  ...   \n100005                                               1.0  ...   \n\n            bureau_CREDIT_TYPE_Microloan_count  \\\nSK_ID_CURR                                       \n100001                                       0   \n100002                                       0   \n100003                                       0   \n100004                                       0   \n100005                                       0   \n\n            bureau_CREDIT_TYPE_Microloan_count_norm  \\\nSK_ID_CURR                                            \n100001                                          0.0   \n100002                                          0.0   \n100003                                          0.0   \n100004                                          0.0   \n100005                                          0.0   \n\n            bureau_CREDIT_TYPE_Mobile operator loan_count  \\\nSK_ID_CURR                                                  \n100001                                                  0   \n100002                                                  0   \n100003                                                  0   \n100004                                                  0   \n100005                                                  0   \n\n            bureau_CREDIT_TYPE_Mobile operator loan_count_norm  \\\nSK_ID_CURR                                                       \n100001                                                    0.0    \n100002                                                    0.0    \n100003                                                    0.0    \n100004                                                    0.0    \n100005                                                    0.0    \n\n            bureau_CREDIT_TYPE_Mortgage_count  \\\nSK_ID_CURR                                      \n100001                                      0   \n100002                                      0   \n100003                                      0   \n100004                                      0   \n100005                                      0   \n\n            bureau_CREDIT_TYPE_Mortgage_count_norm  \\\nSK_ID_CURR                                           \n100001                                         0.0   \n100002                                         0.0   \n100003                                         0.0   \n100004                                         0.0   \n100005                                         0.0   \n\n            bureau_CREDIT_TYPE_Real estate loan_count  \\\nSK_ID_CURR                                              \n100001                                              0   \n100002                                              0   \n100003                                              0   \n100004                                              0   \n100005                                              0   \n\n            bureau_CREDIT_TYPE_Real estate loan_count_norm  \\\nSK_ID_CURR                                                   \n100001                                                 0.0   \n100002                                                 0.0   \n100003                                                 0.0   \n100004                                                 0.0   \n100005                                                 0.0   \n\n            bureau_CREDIT_TYPE_Unknown type of loan_count  \\\nSK_ID_CURR                                                  \n100001                                                  0   \n100002                                                  0   \n100003                                                  0   \n100004                                                  0   \n100005                                                  0   \n\n            bureau_CREDIT_TYPE_Unknown type of loan_count_norm  \nSK_ID_CURR                                                      \n100001                                                    0.0   \n100002                                                    0.0   \n100003                                                    0.0   \n100004                                                    0.0   \n100005                                                    0.0   \n\n[5 rows x 46 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bureau_CREDIT_ACTIVE_Active_count</th>\n      <th>bureau_CREDIT_ACTIVE_Active_count_norm</th>\n      <th>bureau_CREDIT_ACTIVE_Bad debt_count</th>\n      <th>bureau_CREDIT_ACTIVE_Bad debt_count_norm</th>\n      <th>bureau_CREDIT_ACTIVE_Closed_count</th>\n      <th>bureau_CREDIT_ACTIVE_Closed_count_norm</th>\n      <th>bureau_CREDIT_ACTIVE_Sold_count</th>\n      <th>bureau_CREDIT_ACTIVE_Sold_count_norm</th>\n      <th>bureau_CREDIT_CURRENCY_currency 1_count</th>\n      <th>bureau_CREDIT_CURRENCY_currency 1_count_norm</th>\n      <th>...</th>\n      <th>bureau_CREDIT_TYPE_Microloan_count</th>\n      <th>bureau_CREDIT_TYPE_Microloan_count_norm</th>\n      <th>bureau_CREDIT_TYPE_Mobile operator loan_count</th>\n      <th>bureau_CREDIT_TYPE_Mobile operator loan_count_norm</th>\n      <th>bureau_CREDIT_TYPE_Mortgage_count</th>\n      <th>bureau_CREDIT_TYPE_Mortgage_count_norm</th>\n      <th>bureau_CREDIT_TYPE_Real estate loan_count</th>\n      <th>bureau_CREDIT_TYPE_Real estate loan_count_norm</th>\n      <th>bureau_CREDIT_TYPE_Unknown type of loan_count</th>\n      <th>bureau_CREDIT_TYPE_Unknown type of loan_count_norm</th>\n    </tr>\n    <tr>\n      <th>SK_ID_CURR</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>100001</th>\n      <td>3</td>\n      <td>0.428571</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>4</td>\n      <td>0.571429</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100002</th>\n      <td>2</td>\n      <td>0.250000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>6</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100003</th>\n      <td>1</td>\n      <td>0.250000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>4</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100004</th>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>100005</th>\n      <td>2</td>\n      <td>0.666667</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>0.333333</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 46 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance = pd.read_csv('../input/home-credit-default-risk/bureau_balance.csv')","execution_count":160,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance.head()","execution_count":161,"outputs":[{"output_type":"execute_result","execution_count":161,"data":{"text/plain":"   SK_ID_BUREAU  MONTHS_BALANCE STATUS\n0       5715448               0      C\n1       5715448              -1      C\n2       5715448              -2      C\n3       5715448              -3      C\n4       5715448              -4      C","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_BUREAU</th>\n      <th>MONTHS_BALANCE</th>\n      <th>STATUS</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5715448</td>\n      <td>0</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5715448</td>\n      <td>-1</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5715448</td>\n      <td>-2</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5715448</td>\n      <td>-3</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5715448</td>\n      <td>-4</td>\n      <td>C</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance['MONTHS_BALANCE'].value_counts()","execution_count":162,"outputs":[{"output_type":"execute_result","execution_count":162,"data":{"text/plain":"-1     622601\n-2     619243\n-3     615080\n 0     610965\n-4     609138\n        ...  \n-92     57300\n-93     53535\n-94     49965\n-95     46542\n-96     43147\nName: MONTHS_BALANCE, Length: 97, dtype: int64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance_counts = count_categorical(bureau_balance,group_var = 'SK_ID_BUREAU',df_name = 'bureau_balance')","execution_count":163,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance_counts.head()","execution_count":164,"outputs":[{"output_type":"execute_result","execution_count":164,"data":{"text/plain":"              bureau_balance_STATUS_0_count  \\\nSK_ID_BUREAU                                  \n5001709                                   0   \n5001710                                   5   \n5001711                                   3   \n5001712                                  10   \n5001713                                   0   \n\n              bureau_balance_STATUS_0_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                 0.000000   \n5001710                                 0.060241   \n5001711                                 0.750000   \n5001712                                 0.526316   \n5001713                                 0.000000   \n\n              bureau_balance_STATUS_1_count  \\\nSK_ID_BUREAU                                  \n5001709                                   0   \n5001710                                   0   \n5001711                                   0   \n5001712                                   0   \n5001713                                   0   \n\n              bureau_balance_STATUS_1_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                      0.0   \n5001710                                      0.0   \n5001711                                      0.0   \n5001712                                      0.0   \n5001713                                      0.0   \n\n              bureau_balance_STATUS_2_count  \\\nSK_ID_BUREAU                                  \n5001709                                   0   \n5001710                                   0   \n5001711                                   0   \n5001712                                   0   \n5001713                                   0   \n\n              bureau_balance_STATUS_2_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                      0.0   \n5001710                                      0.0   \n5001711                                      0.0   \n5001712                                      0.0   \n5001713                                      0.0   \n\n              bureau_balance_STATUS_3_count  \\\nSK_ID_BUREAU                                  \n5001709                                   0   \n5001710                                   0   \n5001711                                   0   \n5001712                                   0   \n5001713                                   0   \n\n              bureau_balance_STATUS_3_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                      0.0   \n5001710                                      0.0   \n5001711                                      0.0   \n5001712                                      0.0   \n5001713                                      0.0   \n\n              bureau_balance_STATUS_4_count  \\\nSK_ID_BUREAU                                  \n5001709                                   0   \n5001710                                   0   \n5001711                                   0   \n5001712                                   0   \n5001713                                   0   \n\n              bureau_balance_STATUS_4_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                      0.0   \n5001710                                      0.0   \n5001711                                      0.0   \n5001712                                      0.0   \n5001713                                      0.0   \n\n              bureau_balance_STATUS_5_count  \\\nSK_ID_BUREAU                                  \n5001709                                   0   \n5001710                                   0   \n5001711                                   0   \n5001712                                   0   \n5001713                                   0   \n\n              bureau_balance_STATUS_5_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                      0.0   \n5001710                                      0.0   \n5001711                                      0.0   \n5001712                                      0.0   \n5001713                                      0.0   \n\n              bureau_balance_STATUS_C_count  \\\nSK_ID_BUREAU                                  \n5001709                                  86   \n5001710                                  48   \n5001711                                   0   \n5001712                                   9   \n5001713                                   0   \n\n              bureau_balance_STATUS_C_count_norm  \\\nSK_ID_BUREAU                                       \n5001709                                 0.886598   \n5001710                                 0.578313   \n5001711                                 0.000000   \n5001712                                 0.473684   \n5001713                                 0.000000   \n\n              bureau_balance_STATUS_X_count  \\\nSK_ID_BUREAU                                  \n5001709                                  11   \n5001710                                  30   \n5001711                                   1   \n5001712                                   0   \n5001713                                  22   \n\n              bureau_balance_STATUS_X_count_norm  \nSK_ID_BUREAU                                      \n5001709                                 0.113402  \n5001710                                 0.361446  \n5001711                                 0.250000  \n5001712                                 0.000000  \n5001713                                 1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bureau_balance_STATUS_0_count</th>\n      <th>bureau_balance_STATUS_0_count_norm</th>\n      <th>bureau_balance_STATUS_1_count</th>\n      <th>bureau_balance_STATUS_1_count_norm</th>\n      <th>bureau_balance_STATUS_2_count</th>\n      <th>bureau_balance_STATUS_2_count_norm</th>\n      <th>bureau_balance_STATUS_3_count</th>\n      <th>bureau_balance_STATUS_3_count_norm</th>\n      <th>bureau_balance_STATUS_4_count</th>\n      <th>bureau_balance_STATUS_4_count_norm</th>\n      <th>bureau_balance_STATUS_5_count</th>\n      <th>bureau_balance_STATUS_5_count_norm</th>\n      <th>bureau_balance_STATUS_C_count</th>\n      <th>bureau_balance_STATUS_C_count_norm</th>\n      <th>bureau_balance_STATUS_X_count</th>\n      <th>bureau_balance_STATUS_X_count_norm</th>\n    </tr>\n    <tr>\n      <th>SK_ID_BUREAU</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5001709</th>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>86</td>\n      <td>0.886598</td>\n      <td>11</td>\n      <td>0.113402</td>\n    </tr>\n    <tr>\n      <th>5001710</th>\n      <td>5</td>\n      <td>0.060241</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>48</td>\n      <td>0.578313</td>\n      <td>30</td>\n      <td>0.361446</td>\n    </tr>\n    <tr>\n      <th>5001711</th>\n      <td>3</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>1</td>\n      <td>0.250000</td>\n    </tr>\n    <tr>\n      <th>5001712</th>\n      <td>10</td>\n      <td>0.526316</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>9</td>\n      <td>0.473684</td>\n      <td>0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>5001713</th>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>22</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance_agg = agg_numeric(bureau_balance,group_var = 'SK_ID_BUREAU',df_name = 'bureau_balance')","execution_count":165,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance_agg.head()","execution_count":166,"outputs":[{"output_type":"execute_result","execution_count":166,"data":{"text/plain":"   SK_ID_BUREAU  bureau_balance_MONTHS_BALANCE_count  \\\n0       5001709                                   97   \n1       5001710                                   83   \n2       5001711                                    4   \n3       5001712                                   19   \n4       5001713                                   22   \n\n   bureau_balance_MONTHS_BALANCE_mean  bureau_balance_MONTHS_BALANCE_max  \\\n0                               -48.0                                  0   \n1                               -41.0                                  0   \n2                                -1.5                                  0   \n3                                -9.0                                  0   \n4                               -10.5                                  0   \n\n   bureau_balance_MONTHS_BALANCE_min  bureau_balance_MONTHS_BALANCE_sum  \n0                                -96                              -4656  \n1                                -82                              -3403  \n2                                 -3                                 -6  \n3                                -18                               -171  \n4                                -21                               -231  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_BUREAU</th>\n      <th>bureau_balance_MONTHS_BALANCE_count</th>\n      <th>bureau_balance_MONTHS_BALANCE_mean</th>\n      <th>bureau_balance_MONTHS_BALANCE_max</th>\n      <th>bureau_balance_MONTHS_BALANCE_min</th>\n      <th>bureau_balance_MONTHS_BALANCE_sum</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5001709</td>\n      <td>97</td>\n      <td>-48.0</td>\n      <td>0</td>\n      <td>-96</td>\n      <td>-4656</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5001710</td>\n      <td>83</td>\n      <td>-41.0</td>\n      <td>0</td>\n      <td>-82</td>\n      <td>-3403</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5001711</td>\n      <td>4</td>\n      <td>-1.5</td>\n      <td>0</td>\n      <td>-3</td>\n      <td>-6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5001712</td>\n      <td>19</td>\n      <td>-9.0</td>\n      <td>0</td>\n      <td>-18</td>\n      <td>-171</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5001713</td>\n      <td>22</td>\n      <td>-10.5</td>\n      <td>0</td>\n      <td>-21</td>\n      <td>-231</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_by_loan = bureau_balance_agg.merge(bureau_balance_counts, right_index = True,left_on = 'SK_ID_BUREAU',how = 'outer')","execution_count":167,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_by_loan = bureau_by_loan.merge(bureau[['SK_ID_BUREAU','SK_ID_CURR']], on = 'SK_ID_BUREAU',how = 'left')\nbureau_by_loan.head()","execution_count":168,"outputs":[{"output_type":"execute_result","execution_count":168,"data":{"text/plain":"   SK_ID_BUREAU  bureau_balance_MONTHS_BALANCE_count  \\\n0       5001709                                   97   \n1       5001710                                   83   \n2       5001711                                    4   \n3       5001712                                   19   \n4       5001713                                   22   \n\n   bureau_balance_MONTHS_BALANCE_mean  bureau_balance_MONTHS_BALANCE_max  \\\n0                               -48.0                                  0   \n1                               -41.0                                  0   \n2                                -1.5                                  0   \n3                                -9.0                                  0   \n4                               -10.5                                  0   \n\n   bureau_balance_MONTHS_BALANCE_min  bureau_balance_MONTHS_BALANCE_sum  \\\n0                                -96                              -4656   \n1                                -82                              -3403   \n2                                 -3                                 -6   \n3                                -18                               -171   \n4                                -21                               -231   \n\n   bureau_balance_STATUS_0_count  bureau_balance_STATUS_0_count_norm  \\\n0                              0                            0.000000   \n1                              5                            0.060241   \n2                              3                            0.750000   \n3                             10                            0.526316   \n4                              0                            0.000000   \n\n   bureau_balance_STATUS_1_count  bureau_balance_STATUS_1_count_norm  ...  \\\n0                              0                                 0.0  ...   \n1                              0                                 0.0  ...   \n2                              0                                 0.0  ...   \n3                              0                                 0.0  ...   \n4                              0                                 0.0  ...   \n\n   bureau_balance_STATUS_3_count_norm  bureau_balance_STATUS_4_count  \\\n0                                 0.0                              0   \n1                                 0.0                              0   \n2                                 0.0                              0   \n3                                 0.0                              0   \n4                                 0.0                              0   \n\n   bureau_balance_STATUS_4_count_norm  bureau_balance_STATUS_5_count  \\\n0                                 0.0                              0   \n1                                 0.0                              0   \n2                                 0.0                              0   \n3                                 0.0                              0   \n4                                 0.0                              0   \n\n   bureau_balance_STATUS_5_count_norm  bureau_balance_STATUS_C_count  \\\n0                                 0.0                             86   \n1                                 0.0                             48   \n2                                 0.0                              0   \n3                                 0.0                              9   \n4                                 0.0                              0   \n\n   bureau_balance_STATUS_C_count_norm  bureau_balance_STATUS_X_count  \\\n0                            0.886598                             11   \n1                            0.578313                             30   \n2                            0.000000                              1   \n3                            0.473684                              0   \n4                            0.000000                             22   \n\n   bureau_balance_STATUS_X_count_norm  SK_ID_CURR  \n0                            0.113402         NaN  \n1                            0.361446    162368.0  \n2                            0.250000    162368.0  \n3                            0.000000    162368.0  \n4                            1.000000    150635.0  \n\n[5 rows x 23 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_BUREAU</th>\n      <th>bureau_balance_MONTHS_BALANCE_count</th>\n      <th>bureau_balance_MONTHS_BALANCE_mean</th>\n      <th>bureau_balance_MONTHS_BALANCE_max</th>\n      <th>bureau_balance_MONTHS_BALANCE_min</th>\n      <th>bureau_balance_MONTHS_BALANCE_sum</th>\n      <th>bureau_balance_STATUS_0_count</th>\n      <th>bureau_balance_STATUS_0_count_norm</th>\n      <th>bureau_balance_STATUS_1_count</th>\n      <th>bureau_balance_STATUS_1_count_norm</th>\n      <th>...</th>\n      <th>bureau_balance_STATUS_3_count_norm</th>\n      <th>bureau_balance_STATUS_4_count</th>\n      <th>bureau_balance_STATUS_4_count_norm</th>\n      <th>bureau_balance_STATUS_5_count</th>\n      <th>bureau_balance_STATUS_5_count_norm</th>\n      <th>bureau_balance_STATUS_C_count</th>\n      <th>bureau_balance_STATUS_C_count_norm</th>\n      <th>bureau_balance_STATUS_X_count</th>\n      <th>bureau_balance_STATUS_X_count_norm</th>\n      <th>SK_ID_CURR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5001709</td>\n      <td>97</td>\n      <td>-48.0</td>\n      <td>0</td>\n      <td>-96</td>\n      <td>-4656</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>86</td>\n      <td>0.886598</td>\n      <td>11</td>\n      <td>0.113402</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5001710</td>\n      <td>83</td>\n      <td>-41.0</td>\n      <td>0</td>\n      <td>-82</td>\n      <td>-3403</td>\n      <td>5</td>\n      <td>0.060241</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>48</td>\n      <td>0.578313</td>\n      <td>30</td>\n      <td>0.361446</td>\n      <td>162368.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5001711</td>\n      <td>4</td>\n      <td>-1.5</td>\n      <td>0</td>\n      <td>-3</td>\n      <td>-6</td>\n      <td>3</td>\n      <td>0.750000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>1</td>\n      <td>0.250000</td>\n      <td>162368.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5001712</td>\n      <td>19</td>\n      <td>-9.0</td>\n      <td>0</td>\n      <td>-18</td>\n      <td>-171</td>\n      <td>10</td>\n      <td>0.526316</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>9</td>\n      <td>0.473684</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>162368.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5001713</td>\n      <td>22</td>\n      <td>-10.5</td>\n      <td>0</td>\n      <td>-21</td>\n      <td>-231</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>22</td>\n      <td>1.000000</td>\n      <td>150635.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 23 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance_by_client = agg_numeric(bureau_by_loan.drop(columns = ['SK_ID_BUREAU']),group_var = 'SK_ID_CURR',df_name = 'client')","execution_count":169,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"bureau_balance_by_client.head()","execution_count":170,"outputs":[{"output_type":"execute_result","execution_count":170,"data":{"text/plain":"   SK_ID_CURR  client_bureau_balance_MONTHS_BALANCE_count_count  \\\n0    100001.0                                                 7   \n1    100002.0                                                 8   \n2    100005.0                                                 3   \n3    100010.0                                                 2   \n4    100013.0                                                 4   \n\n   client_bureau_balance_MONTHS_BALANCE_count_mean  \\\n0                                        24.571429   \n1                                        13.750000   \n2                                         7.000000   \n3                                        36.000000   \n4                                        57.500000   \n\n   client_bureau_balance_MONTHS_BALANCE_count_max  \\\n0                                              52   \n1                                              22   \n2                                              13   \n3                                              36   \n4                                              69   \n\n   client_bureau_balance_MONTHS_BALANCE_count_min  \\\n0                                               2   \n1                                               4   \n2                                               3   \n3                                              36   \n4                                              40   \n\n   client_bureau_balance_MONTHS_BALANCE_count_sum  \\\n0                                             172   \n1                                             110   \n2                                              21   \n3                                              72   \n4                                             230   \n\n   client_bureau_balance_MONTHS_BALANCE_mean_count  \\\n0                                                7   \n1                                                8   \n2                                                3   \n3                                                2   \n4                                                4   \n\n   client_bureau_balance_MONTHS_BALANCE_mean_mean  \\\n0                                      -11.785714   \n1                                      -21.875000   \n2                                       -3.000000   \n3                                      -46.000000   \n4                                      -28.250000   \n\n   client_bureau_balance_MONTHS_BALANCE_mean_max  \\\n0                                           -0.5   \n1                                           -1.5   \n2                                           -1.0   \n3                                          -19.5   \n4                                          -19.5   \n\n   client_bureau_balance_MONTHS_BALANCE_mean_min  ...  \\\n0                                          -25.5  ...   \n1                                          -39.5  ...   \n2                                           -6.0  ...   \n3                                          -72.5  ...   \n4                                          -34.0  ...   \n\n   client_bureau_balance_STATUS_X_count_count  \\\n0                                           7   \n1                                           8   \n2                                           3   \n3                                           2   \n4                                           4   \n\n   client_bureau_balance_STATUS_X_count_mean  \\\n0                                   4.285714   \n1                                   1.875000   \n2                                   0.666667   \n3                                   0.000000   \n4                                  10.250000   \n\n   client_bureau_balance_STATUS_X_count_max  \\\n0                                         9   \n1                                         3   \n2                                         1   \n3                                         0   \n4                                        40   \n\n   client_bureau_balance_STATUS_X_count_min  \\\n0                                         0   \n1                                         0   \n2                                         0   \n3                                         0   \n4                                         0   \n\n   client_bureau_balance_STATUS_X_count_sum  \\\n0                                      30.0   \n1                                      15.0   \n2                                       2.0   \n3                                       0.0   \n4                                      41.0   \n\n   client_bureau_balance_STATUS_X_count_norm_count  \\\n0                                                7   \n1                                                8   \n2                                                3   \n3                                                2   \n4                                                4   \n\n   client_bureau_balance_STATUS_X_count_norm_mean  \\\n0                                        0.214590   \n1                                        0.161932   \n2                                        0.136752   \n3                                        0.000000   \n4                                        0.254545   \n\n   client_bureau_balance_STATUS_X_count_norm_max  \\\n0                                       0.500000   \n1                                       0.500000   \n2                                       0.333333   \n3                                       0.000000   \n4                                       1.000000   \n\n   client_bureau_balance_STATUS_X_count_norm_min  \\\n0                                            0.0   \n1                                            0.0   \n2                                            0.0   \n3                                            0.0   \n4                                            0.0   \n\n   client_bureau_balance_STATUS_X_count_norm_sum  \n0                                       1.502129  \n1                                       1.295455  \n2                                       0.410256  \n3                                       0.000000  \n4                                       1.018182  \n\n[5 rows x 106 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_count_count</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_count_mean</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_count_max</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_count_min</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_count_sum</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_mean_count</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_mean_mean</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_mean_max</th>\n      <th>client_bureau_balance_MONTHS_BALANCE_mean_min</th>\n      <th>...</th>\n      <th>client_bureau_balance_STATUS_X_count_count</th>\n      <th>client_bureau_balance_STATUS_X_count_mean</th>\n      <th>client_bureau_balance_STATUS_X_count_max</th>\n      <th>client_bureau_balance_STATUS_X_count_min</th>\n      <th>client_bureau_balance_STATUS_X_count_sum</th>\n      <th>client_bureau_balance_STATUS_X_count_norm_count</th>\n      <th>client_bureau_balance_STATUS_X_count_norm_mean</th>\n      <th>client_bureau_balance_STATUS_X_count_norm_max</th>\n      <th>client_bureau_balance_STATUS_X_count_norm_min</th>\n      <th>client_bureau_balance_STATUS_X_count_norm_sum</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>100001.0</td>\n      <td>7</td>\n      <td>24.571429</td>\n      <td>52</td>\n      <td>2</td>\n      <td>172</td>\n      <td>7</td>\n      <td>-11.785714</td>\n      <td>-0.5</td>\n      <td>-25.5</td>\n      <td>...</td>\n      <td>7</td>\n      <td>4.285714</td>\n      <td>9</td>\n      <td>0</td>\n      <td>30.0</td>\n      <td>7</td>\n      <td>0.214590</td>\n      <td>0.500000</td>\n      <td>0.0</td>\n      <td>1.502129</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>100002.0</td>\n      <td>8</td>\n      <td>13.750000</td>\n      <td>22</td>\n      <td>4</td>\n      <td>110</td>\n      <td>8</td>\n      <td>-21.875000</td>\n      <td>-1.5</td>\n      <td>-39.5</td>\n      <td>...</td>\n      <td>8</td>\n      <td>1.875000</td>\n      <td>3</td>\n      <td>0</td>\n      <td>15.0</td>\n      <td>8</td>\n      <td>0.161932</td>\n      <td>0.500000</td>\n      <td>0.0</td>\n      <td>1.295455</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>100005.0</td>\n      <td>3</td>\n      <td>7.000000</td>\n      <td>13</td>\n      <td>3</td>\n      <td>21</td>\n      <td>3</td>\n      <td>-3.000000</td>\n      <td>-1.0</td>\n      <td>-6.0</td>\n      <td>...</td>\n      <td>3</td>\n      <td>0.666667</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2.0</td>\n      <td>3</td>\n      <td>0.136752</td>\n      <td>0.333333</td>\n      <td>0.0</td>\n      <td>0.410256</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>100010.0</td>\n      <td>2</td>\n      <td>36.000000</td>\n      <td>36</td>\n      <td>36</td>\n      <td>72</td>\n      <td>2</td>\n      <td>-46.000000</td>\n      <td>-19.5</td>\n      <td>-72.5</td>\n      <td>...</td>\n      <td>2</td>\n      <td>0.000000</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>100013.0</td>\n      <td>4</td>\n      <td>57.500000</td>\n      <td>69</td>\n      <td>40</td>\n      <td>230</td>\n      <td>4</td>\n      <td>-28.250000</td>\n      <td>-19.5</td>\n      <td>-34.0</td>\n      <td>...</td>\n      <td>4</td>\n      <td>10.250000</td>\n      <td>40</td>\n      <td>0</td>\n      <td>41.0</td>\n      <td>4</td>\n      <td>0.254545</td>\n      <td>1.000000</td>\n      <td>0.0</td>\n      <td>1.018182</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 106 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train = train.merge(bureau_balance_by_client,on = 'SK_ID_CURR',how = 'left')","execution_count":171,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train = train.merge(bureau_agg,on = 'SK_ID_CURR', how = 'left')","execution_count":172,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train = train.merge(bureau_counts,on = 'SK_ID_CURR',how= 'left')","execution_count":173,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train.shape","execution_count":174,"outputs":[{"output_type":"execute_result","execution_count":174,"data":{"text/plain":"(307511, 440)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"len(train.columns)","execution_count":175,"outputs":[{"output_type":"execute_result","execution_count":175,"data":{"text/plain":"440"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train.columns.value_counts()","execution_count":176,"outputs":[{"output_type":"execute_result","execution_count":176,"data":{"text/plain":"bureau_DAYS_CREDIT_ENDDATE_min_x                           1\nFLOORSMIN_MEDI                                             1\nbureau_CREDIT_TYPE_Cash loan (non-earmarked)_count_norm    1\nFLAG_DOCUMENT_6                                            1\nREG_CITY_NOT_WORK_CITY                                     1\n                                                          ..\nbureau_AMT_CREDIT_SUM_LIMIT_sum_x                          1\nCREDIT_TYPE_Cash loan (non-earmarked)_count                1\nclient_bureau_balance_MONTHS_BALANCE_count_sum             1\nbureau_AMT_CREDIT_SUM_mean_x                               1\nclient_bureau_balance_MONTHS_BALANCE_mean_sum              1\nLength: 440, dtype: int64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"def missing_values_table(df):\n    mis_val = df.isnull().sum()\n    mis_val_per = 100*(df.isnull().sum() / (len(df)))\n    mis_val_table = pd.concat([mis_val,mis_val_per],axis = 1)\n    mis_val_table = mis_val_table.rename(columns = {0:'Number of missing', 1:'% of Missing'})\n    mis_val_table = mis_val_table[mis_val_table.iloc[:,1] != 0].sort_values('% of Missing',ascending = False).round(1)\n    return mis_val_table","execution_count":177,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_miss = missing_values_table(train)","execution_count":178,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_miss.shape","execution_count":179,"outputs":[{"output_type":"execute_result","execution_count":179,"data":{"text/plain":"(384, 2)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_miss_vars = list(train_miss.index[train_miss['% of Missing'] > 90])","execution_count":180,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_miss_vars","execution_count":181,"outputs":[{"output_type":"execute_result","execution_count":181,"data":{"text/plain":"[]"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app = pd.read_csv('../input/home-credit-default-risk/application_test.csv')","execution_count":182,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app.shape","execution_count":183,"outputs":[{"output_type":"execute_result","execution_count":183,"data":{"text/plain":"(48744, 121)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app = test_app.merge(bureau_counts,on = 'SK_ID_CURR',how = 'left')","execution_count":184,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app.shape","execution_count":185,"outputs":[{"output_type":"execute_result","execution_count":185,"data":{"text/plain":"(48744, 167)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app = test_app.merge(bureau_agg,on = 'SK_ID_CURR',how = 'left')","execution_count":186,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app.shape","execution_count":187,"outputs":[{"output_type":"execute_result","execution_count":187,"data":{"text/plain":"(48744, 227)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app = test_app.merge(bureau_balance_by_client,on = 'SK_ID_CURR',how = 'left')","execution_count":188,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app.shape","execution_count":189,"outputs":[{"output_type":"execute_result","execution_count":189,"data":{"text/plain":"(48744, 332)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app = pd.read_csv('../input/home-credit-default-risk/application_train.csv')","execution_count":190,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app.shape","execution_count":191,"outputs":[{"output_type":"execute_result","execution_count":191,"data":{"text/plain":"(307511, 122)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app = train_app.merge(bureau_counts,on = 'SK_ID_CURR',how = 'left')","execution_count":192,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app = train_app.merge(bureau_agg,on = 'SK_ID_CURR',how = 'left')","execution_count":193,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app = train_app.merge(bureau_balance_by_client,on = 'SK_ID_CURR',how = 'left')","execution_count":194,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app.shape","execution_count":195,"outputs":[{"output_type":"execute_result","execution_count":195,"data":{"text/plain":"(307511, 333)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_labels = train_app['TARGET']\ntrain_app, test_app = train_app.align(test_app,join = 'inner',axis = 1)\ntrain_app['TARGET'] = train_labels","execution_count":196,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app.shape","execution_count":197,"outputs":[{"output_type":"execute_result","execution_count":197,"data":{"text/plain":"(307511, 333)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app.shape","execution_count":198,"outputs":[{"output_type":"execute_result","execution_count":198,"data":{"text/plain":"(48744, 332)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"missing_test = missing_values_table(test_app)","execution_count":199,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"missing_test","execution_count":200,"outputs":[{"output_type":"execute_result","execution_count":200,"data":{"text/plain":"                          Number of missing  % of Missing\nCOMMONAREA_MEDI                       33495          68.7\nCOMMONAREA_MODE                       33495          68.7\nCOMMONAREA_AVG                        33495          68.7\nNONLIVINGAPARTMENTS_MEDI              33347          68.4\nNONLIVINGAPARTMENTS_AVG               33347          68.4\n...                                     ...           ...\nOBS_60_CNT_SOCIAL_CIRCLE                 29           0.1\nDEF_30_CNT_SOCIAL_CIRCLE                 29           0.1\nOBS_30_CNT_SOCIAL_CIRCLE                 29           0.1\nAMT_ANNUITY                              24           0.0\nEXT_SOURCE_2                              8           0.0\n\n[275 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Number of missing</th>\n      <th>% of Missing</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>COMMONAREA_MEDI</th>\n      <td>33495</td>\n      <td>68.7</td>\n    </tr>\n    <tr>\n      <th>COMMONAREA_MODE</th>\n      <td>33495</td>\n      <td>68.7</td>\n    </tr>\n    <tr>\n      <th>COMMONAREA_AVG</th>\n      <td>33495</td>\n      <td>68.7</td>\n    </tr>\n    <tr>\n      <th>NONLIVINGAPARTMENTS_MEDI</th>\n      <td>33347</td>\n      <td>68.4</td>\n    </tr>\n    <tr>\n      <th>NONLIVINGAPARTMENTS_AVG</th>\n      <td>33347</td>\n      <td>68.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>\n      <td>29</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>\n      <td>29</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>OBS_30_CNT_SOCIAL_CIRCLE</th>\n      <td>29</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>AMT_ANNUITY</th>\n      <td>24</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>EXT_SOURCE_2</th>\n      <td>8</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>275 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_app.to_csv('train_bureau_raw.csv',index = False)","execution_count":201,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_app.to_csv('test_bureau_raw.csv',index = False)","execution_count":202,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"corrs = train_app.corr()","execution_count":203,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"corrs = corrs.sort_values('TARGET',ascending = False)","execution_count":204,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"corrs['TARGET'].head(10)","execution_count":205,"outputs":[{"output_type":"execute_result","execution_count":205,"data":{"text/plain":"TARGET                                            1.000000\nbureau_DAYS_CREDIT_mean                           0.089729\nclient_bureau_balance_MONTHS_BALANCE_min_mean     0.089038\nDAYS_BIRTH                                        0.078239\nbureau_CREDIT_ACTIVE_Active_count_norm            0.077356\nclient_bureau_balance_MONTHS_BALANCE_mean_mean    0.076424\nbureau_DAYS_CREDIT_min                            0.075248\nclient_bureau_balance_MONTHS_BALANCE_min_min      0.073225\nclient_bureau_balance_MONTHS_BALANCE_sum_mean     0.072606\nbureau_DAYS_CREDIT_UPDATE_mean                    0.068927\nName: TARGET, dtype: float64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"kde_target(train_app,'bureau_CREDIT_ACTIVE_Active_count_norm')","execution_count":206,"outputs":[{"output_type":"stream","text":"Correlation of variable is 0.0774\nAverage value for defaulters is 0.5000\nAverage value for non defaulters is 0.3636\n","name":"stdout"},{"output_type":"display_data","data":{"text/plain":"<Figure size 864x576 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"threshold = 0.8\nabove_threshold_vars = {}\nfor col in corrs:\n    above_threshold_vars[col] = list(corrs.index[corrs[col] > threshold])\n\n","execution_count":207,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"above_threshold_vars","execution_count":208,"outputs":[{"output_type":"execute_result","execution_count":208,"data":{"text/plain":"{'SK_ID_CURR': ['SK_ID_CURR'],\n 'CNT_CHILDREN': ['CNT_CHILDREN', 'CNT_FAM_MEMBERS'],\n 'AMT_INCOME_TOTAL': ['AMT_INCOME_TOTAL'],\n 'AMT_CREDIT': ['AMT_CREDIT', 'AMT_GOODS_PRICE'],\n 'AMT_ANNUITY': ['AMT_ANNUITY'],\n 'AMT_GOODS_PRICE': ['AMT_CREDIT', 'AMT_GOODS_PRICE'],\n 'REGION_POPULATION_RELATIVE': ['REGION_POPULATION_RELATIVE'],\n 'DAYS_BIRTH': ['DAYS_BIRTH'],\n 'DAYS_EMPLOYED': ['DAYS_EMPLOYED'],\n 'DAYS_REGISTRATION': ['DAYS_REGISTRATION'],\n 'DAYS_ID_PUBLISH': ['DAYS_ID_PUBLISH'],\n 'OWN_CAR_AGE': ['OWN_CAR_AGE'],\n 'FLAG_MOBIL': ['FLAG_MOBIL'],\n 'FLAG_EMP_PHONE': ['FLAG_EMP_PHONE'],\n 'FLAG_WORK_PHONE': ['FLAG_WORK_PHONE'],\n 'FLAG_CONT_MOBILE': ['FLAG_CONT_MOBILE'],\n 'FLAG_PHONE': ['FLAG_PHONE'],\n 'FLAG_EMAIL': ['FLAG_EMAIL'],\n 'CNT_FAM_MEMBERS': ['CNT_CHILDREN', 'CNT_FAM_MEMBERS'],\n 'REGION_RATING_CLIENT': ['REGION_RATING_CLIENT_W_CITY',\n  'REGION_RATING_CLIENT'],\n 'REGION_RATING_CLIENT_W_CITY': ['REGION_RATING_CLIENT_W_CITY',\n  'REGION_RATING_CLIENT'],\n 'HOUR_APPR_PROCESS_START': ['HOUR_APPR_PROCESS_START'],\n 'REG_REGION_NOT_LIVE_REGION': ['REG_REGION_NOT_LIVE_REGION'],\n 'REG_REGION_NOT_WORK_REGION': ['REG_REGION_NOT_WORK_REGION',\n  'LIVE_REGION_NOT_WORK_REGION'],\n 'LIVE_REGION_NOT_WORK_REGION': ['REG_REGION_NOT_WORK_REGION',\n  'LIVE_REGION_NOT_WORK_REGION'],\n 'REG_CITY_NOT_LIVE_CITY': ['REG_CITY_NOT_LIVE_CITY'],\n 'REG_CITY_NOT_WORK_CITY': ['REG_CITY_NOT_WORK_CITY',\n  'LIVE_CITY_NOT_WORK_CITY'],\n 'LIVE_CITY_NOT_WORK_CITY': ['REG_CITY_NOT_WORK_CITY',\n  'LIVE_CITY_NOT_WORK_CITY'],\n 'EXT_SOURCE_1': ['EXT_SOURCE_1'],\n 'EXT_SOURCE_2': ['EXT_SOURCE_2'],\n 'EXT_SOURCE_3': ['EXT_SOURCE_3'],\n 'APARTMENTS_AVG': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'BASEMENTAREA_AVG': ['BASEMENTAREA_MODE',\n  'BASEMENTAREA_MEDI',\n  'BASEMENTAREA_AVG'],\n 'YEARS_BEGINEXPLUATATION_AVG': ['YEARS_BEGINEXPLUATATION_MODE',\n  'YEARS_BEGINEXPLUATATION_AVG',\n  'YEARS_BEGINEXPLUATATION_MEDI'],\n 'YEARS_BUILD_AVG': ['YEARS_BUILD_MODE',\n  'YEARS_BUILD_AVG',\n  'YEARS_BUILD_MEDI'],\n 'COMMONAREA_AVG': ['COMMONAREA_MODE', 'COMMONAREA_AVG', 'COMMONAREA_MEDI'],\n 'ELEVATORS_AVG': ['LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'ENTRANCES_AVG': ['ENTRANCES_MODE', 'ENTRANCES_MEDI', 'ENTRANCES_AVG'],\n 'FLOORSMAX_AVG': ['FLOORSMAX_MODE', 'FLOORSMAX_MEDI', 'FLOORSMAX_AVG'],\n 'FLOORSMIN_AVG': ['FLOORSMIN_MODE', 'FLOORSMIN_MEDI', 'FLOORSMIN_AVG'],\n 'LANDAREA_AVG': ['LANDAREA_MODE', 'LANDAREA_AVG', 'LANDAREA_MEDI'],\n 'LIVINGAPARTMENTS_AVG': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'LIVINGAREA_AVG': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'NONLIVINGAPARTMENTS_AVG': ['NONLIVINGAPARTMENTS_MODE',\n  'NONLIVINGAPARTMENTS_MEDI',\n  'NONLIVINGAPARTMENTS_AVG'],\n 'NONLIVINGAREA_AVG': ['NONLIVINGAREA_MODE',\n  'NONLIVINGAREA_MEDI',\n  'NONLIVINGAREA_AVG'],\n 'APARTMENTS_MODE': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'BASEMENTAREA_MODE': ['BASEMENTAREA_MODE',\n  'BASEMENTAREA_MEDI',\n  'BASEMENTAREA_AVG'],\n 'YEARS_BEGINEXPLUATATION_MODE': ['YEARS_BEGINEXPLUATATION_MODE',\n  'YEARS_BEGINEXPLUATATION_AVG',\n  'YEARS_BEGINEXPLUATATION_MEDI'],\n 'YEARS_BUILD_MODE': ['YEARS_BUILD_MODE',\n  'YEARS_BUILD_AVG',\n  'YEARS_BUILD_MEDI'],\n 'COMMONAREA_MODE': ['COMMONAREA_MODE', 'COMMONAREA_AVG', 'COMMONAREA_MEDI'],\n 'ELEVATORS_MODE': ['LIVINGAPARTMENTS_MODE',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'ENTRANCES_MODE': ['ENTRANCES_MODE', 'ENTRANCES_MEDI', 'ENTRANCES_AVG'],\n 'FLOORSMAX_MODE': ['FLOORSMAX_MODE', 'FLOORSMAX_MEDI', 'FLOORSMAX_AVG'],\n 'FLOORSMIN_MODE': ['FLOORSMIN_MODE', 'FLOORSMIN_MEDI', 'FLOORSMIN_AVG'],\n 'LANDAREA_MODE': ['LANDAREA_MODE', 'LANDAREA_AVG', 'LANDAREA_MEDI'],\n 'LIVINGAPARTMENTS_MODE': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG'],\n 'LIVINGAREA_MODE': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'NONLIVINGAPARTMENTS_MODE': ['NONLIVINGAPARTMENTS_MODE',\n  'NONLIVINGAPARTMENTS_MEDI',\n  'NONLIVINGAPARTMENTS_AVG'],\n 'NONLIVINGAREA_MODE': ['NONLIVINGAREA_MODE',\n  'NONLIVINGAREA_MEDI',\n  'NONLIVINGAREA_AVG'],\n 'APARTMENTS_MEDI': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'BASEMENTAREA_MEDI': ['BASEMENTAREA_MODE',\n  'BASEMENTAREA_MEDI',\n  'BASEMENTAREA_AVG'],\n 'YEARS_BEGINEXPLUATATION_MEDI': ['YEARS_BEGINEXPLUATATION_MODE',\n  'YEARS_BEGINEXPLUATATION_AVG',\n  'YEARS_BEGINEXPLUATATION_MEDI'],\n 'YEARS_BUILD_MEDI': ['YEARS_BUILD_MODE',\n  'YEARS_BUILD_AVG',\n  'YEARS_BUILD_MEDI'],\n 'COMMONAREA_MEDI': ['COMMONAREA_MODE', 'COMMONAREA_AVG', 'COMMONAREA_MEDI'],\n 'ELEVATORS_MEDI': ['LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'ENTRANCES_MEDI': ['ENTRANCES_MODE', 'ENTRANCES_MEDI', 'ENTRANCES_AVG'],\n 'FLOORSMAX_MEDI': ['FLOORSMAX_MODE', 'FLOORSMAX_MEDI', 'FLOORSMAX_AVG'],\n 'FLOORSMIN_MEDI': ['FLOORSMIN_MODE', 'FLOORSMIN_MEDI', 'FLOORSMIN_AVG'],\n 'LANDAREA_MEDI': ['LANDAREA_MODE', 'LANDAREA_AVG', 'LANDAREA_MEDI'],\n 'LIVINGAPARTMENTS_MEDI': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'LIVINGAREA_MEDI': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'NONLIVINGAPARTMENTS_MEDI': ['NONLIVINGAPARTMENTS_MODE',\n  'NONLIVINGAPARTMENTS_MEDI',\n  'NONLIVINGAPARTMENTS_AVG'],\n 'NONLIVINGAREA_MEDI': ['NONLIVINGAREA_MODE',\n  'NONLIVINGAREA_MEDI',\n  'NONLIVINGAREA_AVG'],\n 'TOTALAREA_MODE': ['LIVINGAPARTMENTS_MODE',\n  'LIVINGAPARTMENTS_MEDI',\n  'LIVINGAPARTMENTS_AVG',\n  'APARTMENTS_MODE',\n  'APARTMENTS_MEDI',\n  'APARTMENTS_AVG',\n  'LIVINGAREA_MODE',\n  'ELEVATORS_MODE',\n  'TOTALAREA_MODE',\n  'LIVINGAREA_MEDI',\n  'LIVINGAREA_AVG',\n  'ELEVATORS_MEDI',\n  'ELEVATORS_AVG'],\n 'OBS_30_CNT_SOCIAL_CIRCLE': ['OBS_30_CNT_SOCIAL_CIRCLE',\n  'OBS_60_CNT_SOCIAL_CIRCLE'],\n 'DEF_30_CNT_SOCIAL_CIRCLE': ['DEF_30_CNT_SOCIAL_CIRCLE',\n  'DEF_60_CNT_SOCIAL_CIRCLE'],\n 'OBS_60_CNT_SOCIAL_CIRCLE': ['OBS_30_CNT_SOCIAL_CIRCLE',\n  'OBS_60_CNT_SOCIAL_CIRCLE'],\n 'DEF_60_CNT_SOCIAL_CIRCLE': ['DEF_30_CNT_SOCIAL_CIRCLE',\n  'DEF_60_CNT_SOCIAL_CIRCLE'],\n 'DAYS_LAST_PHONE_CHANGE': ['DAYS_LAST_PHONE_CHANGE'],\n 'FLAG_DOCUMENT_2': ['FLAG_DOCUMENT_2'],\n 'FLAG_DOCUMENT_3': ['FLAG_DOCUMENT_3'],\n 'FLAG_DOCUMENT_4': ['FLAG_DOCUMENT_4'],\n 'FLAG_DOCUMENT_5': ['FLAG_DOCUMENT_5'],\n 'FLAG_DOCUMENT_6': ['FLAG_DOCUMENT_6'],\n 'FLAG_DOCUMENT_7': ['FLAG_DOCUMENT_7'],\n 'FLAG_DOCUMENT_8': ['FLAG_DOCUMENT_8'],\n 'FLAG_DOCUMENT_9': ['FLAG_DOCUMENT_9'],\n 'FLAG_DOCUMENT_10': ['FLAG_DOCUMENT_10'],\n 'FLAG_DOCUMENT_11': ['FLAG_DOCUMENT_11'],\n 'FLAG_DOCUMENT_12': ['FLAG_DOCUMENT_12'],\n 'FLAG_DOCUMENT_13': ['FLAG_DOCUMENT_13'],\n 'FLAG_DOCUMENT_14': ['FLAG_DOCUMENT_14'],\n 'FLAG_DOCUMENT_15': ['FLAG_DOCUMENT_15'],\n 'FLAG_DOCUMENT_16': ['FLAG_DOCUMENT_16'],\n 'FLAG_DOCUMENT_17': ['FLAG_DOCUMENT_17'],\n 'FLAG_DOCUMENT_18': ['FLAG_DOCUMENT_18'],\n 'FLAG_DOCUMENT_19': ['FLAG_DOCUMENT_19'],\n 'FLAG_DOCUMENT_20': ['FLAG_DOCUMENT_20'],\n 'FLAG_DOCUMENT_21': ['FLAG_DOCUMENT_21'],\n 'AMT_REQ_CREDIT_BUREAU_HOUR': ['AMT_REQ_CREDIT_BUREAU_HOUR'],\n 'AMT_REQ_CREDIT_BUREAU_DAY': ['AMT_REQ_CREDIT_BUREAU_DAY'],\n 'AMT_REQ_CREDIT_BUREAU_WEEK': ['AMT_REQ_CREDIT_BUREAU_WEEK'],\n 'AMT_REQ_CREDIT_BUREAU_MON': ['AMT_REQ_CREDIT_BUREAU_MON'],\n 'AMT_REQ_CREDIT_BUREAU_QRT': ['AMT_REQ_CREDIT_BUREAU_QRT'],\n 'AMT_REQ_CREDIT_BUREAU_YEAR': ['AMT_REQ_CREDIT_BUREAU_YEAR'],\n 'bureau_CREDIT_ACTIVE_Active_count': ['bureau_CREDIT_ACTIVE_Active_count'],\n 'bureau_CREDIT_ACTIVE_Active_count_norm': ['bureau_CREDIT_ACTIVE_Active_count_norm'],\n 'bureau_CREDIT_ACTIVE_Bad debt_count': ['bureau_CREDIT_ACTIVE_Bad debt_count_norm',\n  'bureau_CREDIT_ACTIVE_Bad debt_count'],\n 'bureau_CREDIT_ACTIVE_Bad debt_count_norm': ['bureau_CREDIT_ACTIVE_Bad debt_count_norm',\n  'bureau_CREDIT_ACTIVE_Bad debt_count'],\n 'bureau_CREDIT_ACTIVE_Closed_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'client_bureau_balance_STATUS_C_count_norm_sum',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'bureau_CREDIT_ACTIVE_Closed_count_norm': ['bureau_CREDIT_ACTIVE_Closed_count_norm'],\n 'bureau_CREDIT_ACTIVE_Sold_count': ['bureau_CREDIT_ACTIVE_Sold_count'],\n 'bureau_CREDIT_ACTIVE_Sold_count_norm': ['bureau_CREDIT_ACTIVE_Sold_count_norm'],\n 'bureau_CREDIT_CURRENCY_currency 1_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_CREDIT_CURRENCY_currency 1_count_norm': ['bureau_CREDIT_CURRENCY_currency 1_count_norm'],\n 'bureau_CREDIT_CURRENCY_currency 2_count': ['bureau_CREDIT_CURRENCY_currency 2_count'],\n 'bureau_CREDIT_CURRENCY_currency 2_count_norm': ['bureau_CREDIT_CURRENCY_currency 2_count_norm'],\n 'bureau_CREDIT_CURRENCY_currency 3_count': ['bureau_CREDIT_CURRENCY_currency 3_count'],\n 'bureau_CREDIT_CURRENCY_currency 3_count_norm': ['bureau_CREDIT_CURRENCY_currency 3_count_norm'],\n 'bureau_CREDIT_CURRENCY_currency 4_count': ['bureau_CREDIT_CURRENCY_currency 4_count_norm',\n  'bureau_CREDIT_CURRENCY_currency 4_count'],\n 'bureau_CREDIT_CURRENCY_currency 4_count_norm': ['bureau_CREDIT_CURRENCY_currency 4_count_norm',\n  'bureau_CREDIT_CURRENCY_currency 4_count'],\n 'bureau_CREDIT_TYPE_Another type of loan_count': ['bureau_CREDIT_TYPE_Another type of loan_count'],\n 'bureau_CREDIT_TYPE_Another type of loan_count_norm': ['bureau_CREDIT_TYPE_Another type of loan_count_norm'],\n 'bureau_CREDIT_TYPE_Car loan_count': ['bureau_CREDIT_TYPE_Car loan_count'],\n 'bureau_CREDIT_TYPE_Car loan_count_norm': ['bureau_CREDIT_TYPE_Car loan_count_norm'],\n 'bureau_CREDIT_TYPE_Cash loan (non-earmarked)_count': ['bureau_CREDIT_TYPE_Cash loan (non-earmarked)_count_norm',\n  'bureau_CREDIT_TYPE_Cash loan (non-earmarked)_count'],\n 'bureau_CREDIT_TYPE_Cash loan (non-earmarked)_count_norm': ['bureau_CREDIT_TYPE_Cash loan (non-earmarked)_count_norm',\n  'bureau_CREDIT_TYPE_Cash loan (non-earmarked)_count'],\n 'bureau_CREDIT_TYPE_Consumer credit_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_CREDIT_TYPE_Consumer credit_count_norm': ['bureau_CREDIT_TYPE_Consumer credit_count_norm'],\n 'bureau_CREDIT_TYPE_Credit card_count': ['bureau_CREDIT_TYPE_Credit card_count'],\n 'bureau_CREDIT_TYPE_Credit card_count_norm': ['bureau_CREDIT_TYPE_Credit card_count_norm'],\n 'bureau_CREDIT_TYPE_Interbank credit_count': ['bureau_CREDIT_TYPE_Interbank credit_count',\n  'bureau_CREDIT_TYPE_Interbank credit_count_norm'],\n 'bureau_CREDIT_TYPE_Interbank credit_count_norm': ['bureau_CREDIT_TYPE_Interbank credit_count',\n  'bureau_CREDIT_TYPE_Interbank credit_count_norm'],\n 'bureau_CREDIT_TYPE_Loan for business development_count': ['bureau_CREDIT_TYPE_Loan for business development_count'],\n 'bureau_CREDIT_TYPE_Loan for business development_count_norm': ['bureau_CREDIT_TYPE_Loan for business development_count_norm'],\n 'bureau_CREDIT_TYPE_Loan for purchase of shares (margin lending)_count': ['bureau_CREDIT_TYPE_Loan for purchase of shares (margin lending)_count_norm',\n  'bureau_CREDIT_TYPE_Loan for purchase of shares (margin lending)_count'],\n 'bureau_CREDIT_TYPE_Loan for purchase of shares (margin lending)_count_norm': ['bureau_CREDIT_TYPE_Loan for purchase of shares (margin lending)_count_norm',\n  'bureau_CREDIT_TYPE_Loan for purchase of shares (margin lending)_count'],\n 'bureau_CREDIT_TYPE_Loan for the purchase of equipment_count': ['bureau_CREDIT_TYPE_Loan for the purchase of equipment_count'],\n 'bureau_CREDIT_TYPE_Loan for the purchase of equipment_count_norm': ['bureau_CREDIT_TYPE_Loan for the purchase of equipment_count_norm'],\n 'bureau_CREDIT_TYPE_Loan for working capital replenishment_count': ['bureau_CREDIT_TYPE_Loan for working capital replenishment_count'],\n 'bureau_CREDIT_TYPE_Loan for working capital replenishment_count_norm': ['bureau_CREDIT_TYPE_Loan for working capital replenishment_count_norm'],\n 'bureau_CREDIT_TYPE_Microloan_count': ['bureau_CREDIT_TYPE_Microloan_count'],\n 'bureau_CREDIT_TYPE_Microloan_count_norm': ['bureau_CREDIT_TYPE_Microloan_count_norm'],\n 'bureau_CREDIT_TYPE_Mobile operator loan_count': ['bureau_CREDIT_TYPE_Mobile operator loan_count_norm',\n  'bureau_CREDIT_TYPE_Mobile operator loan_count'],\n 'bureau_CREDIT_TYPE_Mobile operator loan_count_norm': ['bureau_CREDIT_TYPE_Mobile operator loan_count_norm',\n  'bureau_CREDIT_TYPE_Mobile operator loan_count'],\n 'bureau_CREDIT_TYPE_Mortgage_count': ['bureau_CREDIT_TYPE_Mortgage_count'],\n 'bureau_CREDIT_TYPE_Mortgage_count_norm': ['bureau_CREDIT_TYPE_Mortgage_count_norm'],\n 'bureau_CREDIT_TYPE_Real estate loan_count': ['bureau_CREDIT_TYPE_Real estate loan_count'],\n 'bureau_CREDIT_TYPE_Real estate loan_count_norm': ['bureau_CREDIT_TYPE_Real estate loan_count_norm'],\n 'bureau_CREDIT_TYPE_Unknown type of loan_count': ['bureau_CREDIT_TYPE_Unknown type of loan_count'],\n 'bureau_CREDIT_TYPE_Unknown type of loan_count_norm': ['bureau_CREDIT_TYPE_Unknown type of loan_count_norm'],\n 'bureau_DAYS_CREDIT_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_DAYS_CREDIT_mean': ['bureau_DAYS_CREDIT_mean',\n  'client_bureau_balance_MONTHS_BALANCE_min_mean',\n  'client_bureau_balance_MONTHS_BALANCE_mean_mean',\n  'bureau_DAYS_CREDIT_min',\n  'client_bureau_balance_MONTHS_BALANCE_sum_mean'],\n 'bureau_DAYS_CREDIT_max': ['client_bureau_balance_MONTHS_BALANCE_min_max',\n  'bureau_DAYS_CREDIT_max',\n  'client_bureau_balance_MONTHS_BALANCE_mean_max',\n  'client_bureau_balance_MONTHS_BALANCE_sum_max'],\n 'bureau_DAYS_CREDIT_min': ['bureau_DAYS_CREDIT_mean',\n  'bureau_DAYS_CREDIT_min',\n  'client_bureau_balance_MONTHS_BALANCE_min_min',\n  'client_bureau_balance_MONTHS_BALANCE_sum_min',\n  'bureau_DAYS_ENDDATE_FACT_min',\n  'client_bureau_balance_MONTHS_BALANCE_mean_min'],\n 'bureau_DAYS_CREDIT_sum': ['client_bureau_balance_MONTHS_BALANCE_sum_sum',\n  'bureau_DAYS_ENDDATE_FACT_sum',\n  'bureau_DAYS_CREDIT_sum',\n  'bureau_DAYS_CREDIT_UPDATE_sum',\n  'client_bureau_balance_MONTHS_BALANCE_min_sum',\n  'client_bureau_balance_MONTHS_BALANCE_mean_sum'],\n 'bureau_CREDIT_DAY_OVERDUE_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_CREDIT_DAY_OVERDUE_mean': ['bureau_CREDIT_DAY_OVERDUE_mean'],\n 'bureau_CREDIT_DAY_OVERDUE_max': ['bureau_CREDIT_DAY_OVERDUE_sum',\n  'bureau_CREDIT_DAY_OVERDUE_max'],\n 'bureau_CREDIT_DAY_OVERDUE_min': ['bureau_CREDIT_DAY_OVERDUE_min'],\n 'bureau_CREDIT_DAY_OVERDUE_sum': ['bureau_CREDIT_DAY_OVERDUE_sum',\n  'bureau_CREDIT_DAY_OVERDUE_max'],\n 'bureau_DAYS_CREDIT_ENDDATE_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'bureau_DAYS_CREDIT_ENDDATE_mean': ['bureau_DAYS_CREDIT_ENDDATE_mean'],\n 'bureau_DAYS_CREDIT_ENDDATE_max': ['bureau_DAYS_CREDIT_ENDDATE_sum',\n  'bureau_DAYS_CREDIT_ENDDATE_max'],\n 'bureau_DAYS_CREDIT_ENDDATE_min': ['bureau_DAYS_CREDIT_ENDDATE_min'],\n 'bureau_DAYS_CREDIT_ENDDATE_sum': ['bureau_DAYS_CREDIT_ENDDATE_sum',\n  'bureau_DAYS_CREDIT_ENDDATE_max'],\n 'bureau_DAYS_ENDDATE_FACT_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'client_bureau_balance_STATUS_C_count_norm_sum',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'bureau_DAYS_ENDDATE_FACT_mean': ['bureau_DAYS_ENDDATE_FACT_min',\n  'bureau_DAYS_ENDDATE_FACT_mean'],\n 'bureau_DAYS_ENDDATE_FACT_max': ['bureau_DAYS_ENDDATE_FACT_max'],\n 'bureau_DAYS_ENDDATE_FACT_min': ['bureau_DAYS_CREDIT_min',\n  'client_bureau_balance_MONTHS_BALANCE_min_min',\n  'bureau_DAYS_ENDDATE_FACT_min',\n  'bureau_DAYS_ENDDATE_FACT_mean'],\n 'bureau_DAYS_ENDDATE_FACT_sum': ['client_bureau_balance_MONTHS_BALANCE_sum_sum',\n  'bureau_DAYS_ENDDATE_FACT_sum',\n  'bureau_DAYS_CREDIT_sum',\n  'bureau_DAYS_CREDIT_UPDATE_sum',\n  'client_bureau_balance_MONTHS_BALANCE_min_sum',\n  'client_bureau_balance_MONTHS_BALANCE_mean_sum'],\n 'bureau_AMT_CREDIT_MAX_OVERDUE_count': ['bureau_AMT_CREDIT_MAX_OVERDUE_count'],\n 'bureau_AMT_CREDIT_MAX_OVERDUE_mean': ['bureau_AMT_CREDIT_MAX_OVERDUE_max',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_sum',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_mean',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_min'],\n 'bureau_AMT_CREDIT_MAX_OVERDUE_max': ['bureau_AMT_CREDIT_MAX_OVERDUE_max',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_sum',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_mean'],\n 'bureau_AMT_CREDIT_MAX_OVERDUE_min': ['bureau_AMT_CREDIT_MAX_OVERDUE_mean',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_min'],\n 'bureau_AMT_CREDIT_MAX_OVERDUE_sum': ['bureau_AMT_CREDIT_MAX_OVERDUE_max',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_sum',\n  'bureau_AMT_CREDIT_MAX_OVERDUE_mean'],\n 'bureau_CNT_CREDIT_PROLONG_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_CNT_CREDIT_PROLONG_mean': ['bureau_CNT_CREDIT_PROLONG_mean'],\n 'bureau_CNT_CREDIT_PROLONG_max': ['bureau_CNT_CREDIT_PROLONG_sum',\n  'bureau_CNT_CREDIT_PROLONG_max'],\n 'bureau_CNT_CREDIT_PROLONG_min': ['bureau_CNT_CREDIT_PROLONG_min'],\n 'bureau_CNT_CREDIT_PROLONG_sum': ['bureau_CNT_CREDIT_PROLONG_sum',\n  'bureau_CNT_CREDIT_PROLONG_max'],\n 'bureau_AMT_CREDIT_SUM_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_AMT_CREDIT_SUM_mean': ['bureau_AMT_CREDIT_SUM_max',\n  'bureau_AMT_CREDIT_SUM_mean'],\n 'bureau_AMT_CREDIT_SUM_max': ['bureau_AMT_CREDIT_SUM_sum',\n  'bureau_AMT_CREDIT_SUM_max',\n  'bureau_AMT_CREDIT_SUM_mean'],\n 'bureau_AMT_CREDIT_SUM_min': ['bureau_AMT_CREDIT_SUM_min'],\n 'bureau_AMT_CREDIT_SUM_sum': ['bureau_AMT_CREDIT_SUM_sum',\n  'bureau_AMT_CREDIT_SUM_max'],\n 'bureau_AMT_CREDIT_SUM_DEBT_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_AMT_CREDIT_SUM_DEBT_mean': ['bureau_AMT_CREDIT_SUM_DEBT_mean'],\n 'bureau_AMT_CREDIT_SUM_DEBT_max': ['bureau_AMT_CREDIT_SUM_DEBT_sum',\n  'bureau_AMT_CREDIT_SUM_DEBT_max'],\n 'bureau_AMT_CREDIT_SUM_DEBT_min': ['bureau_AMT_CREDIT_SUM_DEBT_min'],\n 'bureau_AMT_CREDIT_SUM_DEBT_sum': ['bureau_AMT_CREDIT_SUM_DEBT_sum',\n  'bureau_AMT_CREDIT_SUM_DEBT_max'],\n 'bureau_AMT_CREDIT_SUM_LIMIT_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count'],\n 'bureau_AMT_CREDIT_SUM_LIMIT_mean': ['bureau_AMT_CREDIT_SUM_LIMIT_mean'],\n 'bureau_AMT_CREDIT_SUM_LIMIT_max': ['bureau_AMT_CREDIT_SUM_LIMIT_sum',\n  'bureau_AMT_CREDIT_SUM_LIMIT_max'],\n 'bureau_AMT_CREDIT_SUM_LIMIT_min': ['bureau_AMT_CREDIT_SUM_LIMIT_min'],\n 'bureau_AMT_CREDIT_SUM_LIMIT_sum': ['bureau_AMT_CREDIT_SUM_LIMIT_sum',\n  'bureau_AMT_CREDIT_SUM_LIMIT_max'],\n 'bureau_AMT_CREDIT_SUM_OVERDUE_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_AMT_CREDIT_SUM_OVERDUE_mean': ['bureau_AMT_CREDIT_SUM_OVERDUE_mean'],\n 'bureau_AMT_CREDIT_SUM_OVERDUE_max': ['bureau_AMT_CREDIT_SUM_OVERDUE_sum',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_max'],\n 'bureau_AMT_CREDIT_SUM_OVERDUE_min': ['bureau_AMT_CREDIT_SUM_OVERDUE_min'],\n 'bureau_AMT_CREDIT_SUM_OVERDUE_sum': ['bureau_AMT_CREDIT_SUM_OVERDUE_sum',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_max'],\n 'bureau_DAYS_CREDIT_UPDATE_count': ['bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count'],\n 'bureau_DAYS_CREDIT_UPDATE_mean': ['bureau_DAYS_CREDIT_UPDATE_mean'],\n 'bureau_DAYS_CREDIT_UPDATE_max': ['bureau_DAYS_CREDIT_UPDATE_max'],\n 'bureau_DAYS_CREDIT_UPDATE_min': ['bureau_DAYS_CREDIT_UPDATE_min'],\n 'bureau_DAYS_CREDIT_UPDATE_sum': ['client_bureau_balance_MONTHS_BALANCE_sum_sum',\n  'bureau_DAYS_ENDDATE_FACT_sum',\n  'bureau_DAYS_CREDIT_sum',\n  'bureau_DAYS_CREDIT_UPDATE_sum',\n  'client_bureau_balance_MONTHS_BALANCE_min_sum',\n  'client_bureau_balance_MONTHS_BALANCE_mean_sum'],\n 'bureau_AMT_ANNUITY_count': ['bureau_AMT_ANNUITY_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count'],\n 'bureau_AMT_ANNUITY_mean': ['bureau_AMT_ANNUITY_mean'],\n 'bureau_AMT_ANNUITY_max': ['bureau_AMT_ANNUITY_sum',\n  'bureau_AMT_ANNUITY_max'],\n 'bureau_AMT_ANNUITY_min': ['bureau_AMT_ANNUITY_min'],\n 'bureau_AMT_ANNUITY_sum': ['bureau_AMT_ANNUITY_sum',\n  'bureau_AMT_ANNUITY_max'],\n 'client_bureau_balance_MONTHS_BALANCE_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_count_mean': ['client_bureau_balance_MONTHS_BALANCE_count_max',\n  'client_bureau_balance_MONTHS_BALANCE_count_mean'],\n 'client_bureau_balance_MONTHS_BALANCE_count_max': ['client_bureau_balance_STATUS_C_count_max',\n  'client_bureau_balance_MONTHS_BALANCE_count_max',\n  'client_bureau_balance_MONTHS_BALANCE_count_mean'],\n 'client_bureau_balance_MONTHS_BALANCE_count_min': ['client_bureau_balance_MONTHS_BALANCE_count_min'],\n 'client_bureau_balance_MONTHS_BALANCE_count_sum': ['client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum',\n  'client_bureau_balance_STATUS_C_count_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_mean_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_mean_mean': ['bureau_DAYS_CREDIT_mean',\n  'client_bureau_balance_MONTHS_BALANCE_min_mean',\n  'client_bureau_balance_MONTHS_BALANCE_mean_mean'],\n 'client_bureau_balance_MONTHS_BALANCE_mean_max': ['client_bureau_balance_MONTHS_BALANCE_min_max',\n  'bureau_DAYS_CREDIT_max',\n  'client_bureau_balance_MONTHS_BALANCE_mean_max',\n  'client_bureau_balance_MONTHS_BALANCE_sum_max'],\n 'client_bureau_balance_MONTHS_BALANCE_mean_min': ['bureau_DAYS_CREDIT_min',\n  'client_bureau_balance_MONTHS_BALANCE_min_min',\n  'client_bureau_balance_MONTHS_BALANCE_mean_min',\n  'client_bureau_balance_MONTHS_BALANCE_max_min'],\n 'client_bureau_balance_MONTHS_BALANCE_mean_sum': ['client_bureau_balance_MONTHS_BALANCE_sum_sum',\n  'bureau_DAYS_ENDDATE_FACT_sum',\n  'bureau_DAYS_CREDIT_sum',\n  'bureau_DAYS_CREDIT_UPDATE_sum',\n  'client_bureau_balance_MONTHS_BALANCE_min_sum',\n  'client_bureau_balance_MONTHS_BALANCE_mean_sum',\n  'client_bureau_balance_MONTHS_BALANCE_max_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_max_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_max_mean': ['client_bureau_balance_MONTHS_BALANCE_max_mean',\n  'client_bureau_balance_MONTHS_BALANCE_max_min'],\n 'client_bureau_balance_MONTHS_BALANCE_max_max': ['client_bureau_balance_MONTHS_BALANCE_max_max'],\n 'client_bureau_balance_MONTHS_BALANCE_max_min': ['client_bureau_balance_MONTHS_BALANCE_mean_min',\n  'client_bureau_balance_MONTHS_BALANCE_max_mean',\n  'client_bureau_balance_MONTHS_BALANCE_max_min'],\n 'client_bureau_balance_MONTHS_BALANCE_max_sum': ['client_bureau_balance_MONTHS_BALANCE_mean_sum',\n  'client_bureau_balance_MONTHS_BALANCE_max_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_min_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_min_mean': ['bureau_DAYS_CREDIT_mean',\n  'client_bureau_balance_MONTHS_BALANCE_min_mean',\n  'client_bureau_balance_MONTHS_BALANCE_mean_mean',\n  'client_bureau_balance_MONTHS_BALANCE_sum_mean'],\n 'client_bureau_balance_MONTHS_BALANCE_min_max': ['client_bureau_balance_MONTHS_BALANCE_min_max',\n  'bureau_DAYS_CREDIT_max',\n  'client_bureau_balance_MONTHS_BALANCE_mean_max',\n  'client_bureau_balance_MONTHS_BALANCE_sum_max'],\n 'client_bureau_balance_MONTHS_BALANCE_min_min': ['bureau_DAYS_CREDIT_min',\n  'client_bureau_balance_MONTHS_BALANCE_min_min',\n  'client_bureau_balance_MONTHS_BALANCE_sum_min',\n  'bureau_DAYS_ENDDATE_FACT_min',\n  'client_bureau_balance_MONTHS_BALANCE_mean_min'],\n 'client_bureau_balance_MONTHS_BALANCE_min_sum': ['client_bureau_balance_MONTHS_BALANCE_sum_sum',\n  'bureau_DAYS_ENDDATE_FACT_sum',\n  'bureau_DAYS_CREDIT_sum',\n  'bureau_DAYS_CREDIT_UPDATE_sum',\n  'client_bureau_balance_MONTHS_BALANCE_min_sum',\n  'client_bureau_balance_MONTHS_BALANCE_mean_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_sum_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_MONTHS_BALANCE_sum_mean': ['bureau_DAYS_CREDIT_mean',\n  'client_bureau_balance_MONTHS_BALANCE_min_mean',\n  'client_bureau_balance_MONTHS_BALANCE_sum_mean',\n  'client_bureau_balance_MONTHS_BALANCE_sum_min'],\n 'client_bureau_balance_MONTHS_BALANCE_sum_max': ['client_bureau_balance_MONTHS_BALANCE_min_max',\n  'bureau_DAYS_CREDIT_max',\n  'client_bureau_balance_MONTHS_BALANCE_mean_max',\n  'client_bureau_balance_MONTHS_BALANCE_sum_max'],\n 'client_bureau_balance_MONTHS_BALANCE_sum_min': ['bureau_DAYS_CREDIT_min',\n  'client_bureau_balance_MONTHS_BALANCE_min_min',\n  'client_bureau_balance_MONTHS_BALANCE_sum_mean',\n  'client_bureau_balance_MONTHS_BALANCE_sum_min'],\n 'client_bureau_balance_MONTHS_BALANCE_sum_sum': ['client_bureau_balance_MONTHS_BALANCE_sum_sum',\n  'bureau_DAYS_ENDDATE_FACT_sum',\n  'bureau_DAYS_CREDIT_sum',\n  'bureau_DAYS_CREDIT_UPDATE_sum',\n  'client_bureau_balance_MONTHS_BALANCE_min_sum',\n  'client_bureau_balance_MONTHS_BALANCE_mean_sum'],\n 'client_bureau_balance_STATUS_0_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_0_count_mean': ['client_bureau_balance_STATUS_0_count_mean'],\n 'client_bureau_balance_STATUS_0_count_max': ['client_bureau_balance_STATUS_0_count_max'],\n 'client_bureau_balance_STATUS_0_count_min': ['client_bureau_balance_STATUS_0_count_min'],\n 'client_bureau_balance_STATUS_0_count_sum': ['client_bureau_balance_STATUS_0_count_sum'],\n 'client_bureau_balance_STATUS_0_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_0_count_norm_mean': ['client_bureau_balance_STATUS_0_count_norm_mean'],\n 'client_bureau_balance_STATUS_0_count_norm_max': ['client_bureau_balance_STATUS_0_count_norm_max'],\n 'client_bureau_balance_STATUS_0_count_norm_min': ['client_bureau_balance_STATUS_0_count_norm_min'],\n 'client_bureau_balance_STATUS_0_count_norm_sum': ['client_bureau_balance_STATUS_0_count_norm_sum'],\n 'client_bureau_balance_STATUS_1_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_1_count_mean': ['client_bureau_balance_STATUS_1_count_mean'],\n 'client_bureau_balance_STATUS_1_count_max': ['client_bureau_balance_STATUS_1_count_max',\n  'client_bureau_balance_STATUS_1_count_sum'],\n 'client_bureau_balance_STATUS_1_count_min': ['client_bureau_balance_STATUS_1_count_min'],\n 'client_bureau_balance_STATUS_1_count_sum': ['client_bureau_balance_STATUS_1_count_norm_sum',\n  'client_bureau_balance_STATUS_1_count_max',\n  'client_bureau_balance_STATUS_1_count_sum'],\n 'client_bureau_balance_STATUS_1_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_1_count_norm_mean': ['client_bureau_balance_STATUS_1_count_norm_mean'],\n 'client_bureau_balance_STATUS_1_count_norm_max': ['client_bureau_balance_STATUS_1_count_norm_max',\n  'client_bureau_balance_STATUS_1_count_norm_sum'],\n 'client_bureau_balance_STATUS_1_count_norm_min': ['client_bureau_balance_STATUS_1_count_norm_min'],\n 'client_bureau_balance_STATUS_1_count_norm_sum': ['client_bureau_balance_STATUS_1_count_norm_max',\n  'client_bureau_balance_STATUS_1_count_norm_sum',\n  'client_bureau_balance_STATUS_1_count_sum'],\n 'client_bureau_balance_STATUS_2_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_2_count_mean': ['client_bureau_balance_STATUS_2_count_mean'],\n 'client_bureau_balance_STATUS_2_count_max': ['client_bureau_balance_STATUS_2_count_sum',\n  'client_bureau_balance_STATUS_2_count_max'],\n 'client_bureau_balance_STATUS_2_count_min': ['client_bureau_balance_STATUS_2_count_min'],\n 'client_bureau_balance_STATUS_2_count_sum': ['client_bureau_balance_STATUS_2_count_norm_sum',\n  'client_bureau_balance_STATUS_2_count_sum',\n  'client_bureau_balance_STATUS_2_count_max'],\n 'client_bureau_balance_STATUS_2_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_2_count_norm_mean': ['client_bureau_balance_STATUS_2_count_norm_mean',\n  'client_bureau_balance_STATUS_2_count_norm_max'],\n 'client_bureau_balance_STATUS_2_count_norm_max': ['client_bureau_balance_STATUS_2_count_norm_sum',\n  'client_bureau_balance_STATUS_2_count_norm_mean',\n  'client_bureau_balance_STATUS_2_count_norm_max'],\n 'client_bureau_balance_STATUS_2_count_norm_min': ['client_bureau_balance_STATUS_2_count_norm_min'],\n 'client_bureau_balance_STATUS_2_count_norm_sum': ['client_bureau_balance_STATUS_2_count_norm_sum',\n  'client_bureau_balance_STATUS_2_count_norm_max',\n  'client_bureau_balance_STATUS_2_count_sum'],\n 'client_bureau_balance_STATUS_3_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_3_count_mean': ['client_bureau_balance_STATUS_3_count_mean'],\n 'client_bureau_balance_STATUS_3_count_max': ['client_bureau_balance_STATUS_3_count_sum',\n  'client_bureau_balance_STATUS_3_count_max'],\n 'client_bureau_balance_STATUS_3_count_min': ['client_bureau_balance_STATUS_3_count_min'],\n 'client_bureau_balance_STATUS_3_count_sum': ['client_bureau_balance_STATUS_3_count_norm_sum',\n  'client_bureau_balance_STATUS_3_count_sum',\n  'client_bureau_balance_STATUS_3_count_max'],\n 'client_bureau_balance_STATUS_3_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_3_count_norm_mean': ['client_bureau_balance_STATUS_3_count_norm_mean',\n  'client_bureau_balance_STATUS_3_count_norm_max'],\n 'client_bureau_balance_STATUS_3_count_norm_max': ['client_bureau_balance_STATUS_3_count_norm_mean',\n  'client_bureau_balance_STATUS_3_count_norm_max',\n  'client_bureau_balance_STATUS_3_count_norm_sum'],\n 'client_bureau_balance_STATUS_3_count_norm_min': ['client_bureau_balance_STATUS_3_count_norm_min'],\n 'client_bureau_balance_STATUS_3_count_norm_sum': ['client_bureau_balance_STATUS_3_count_norm_max',\n  'client_bureau_balance_STATUS_3_count_norm_sum',\n  'client_bureau_balance_STATUS_3_count_sum'],\n 'client_bureau_balance_STATUS_4_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_4_count_mean': ['client_bureau_balance_STATUS_4_count_mean',\n  'client_bureau_balance_STATUS_4_count_norm_mean'],\n 'client_bureau_balance_STATUS_4_count_max': ['client_bureau_balance_STATUS_4_count_max'],\n 'client_bureau_balance_STATUS_4_count_min': ['client_bureau_balance_STATUS_4_count_min'],\n 'client_bureau_balance_STATUS_4_count_sum': ['client_bureau_balance_STATUS_4_count_norm_sum',\n  'client_bureau_balance_STATUS_4_count_sum'],\n 'client_bureau_balance_STATUS_4_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_4_count_norm_mean': ['client_bureau_balance_STATUS_4_count_norm_max',\n  'client_bureau_balance_STATUS_4_count_mean',\n  'client_bureau_balance_STATUS_4_count_norm_mean'],\n 'client_bureau_balance_STATUS_4_count_norm_max': ['client_bureau_balance_STATUS_4_count_norm_max',\n  'client_bureau_balance_STATUS_4_count_norm_mean',\n  'client_bureau_balance_STATUS_4_count_norm_sum'],\n 'client_bureau_balance_STATUS_4_count_norm_min': ['client_bureau_balance_STATUS_4_count_norm_min'],\n 'client_bureau_balance_STATUS_4_count_norm_sum': ['client_bureau_balance_STATUS_4_count_norm_max',\n  'client_bureau_balance_STATUS_4_count_norm_sum',\n  'client_bureau_balance_STATUS_4_count_sum'],\n 'client_bureau_balance_STATUS_5_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_5_count_mean': ['client_bureau_balance_STATUS_5_count_norm_mean',\n  'client_bureau_balance_STATUS_5_count_mean'],\n 'client_bureau_balance_STATUS_5_count_max': ['client_bureau_balance_STATUS_5_count_norm_max',\n  'client_bureau_balance_STATUS_5_count_max',\n  'client_bureau_balance_STATUS_5_count_sum'],\n 'client_bureau_balance_STATUS_5_count_min': ['client_bureau_balance_STATUS_5_count_norm_min',\n  'client_bureau_balance_STATUS_5_count_min'],\n 'client_bureau_balance_STATUS_5_count_sum': ['client_bureau_balance_STATUS_5_count_norm_sum',\n  'client_bureau_balance_STATUS_5_count_max',\n  'client_bureau_balance_STATUS_5_count_sum'],\n 'client_bureau_balance_STATUS_5_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_5_count_norm_mean': ['client_bureau_balance_STATUS_5_count_norm_mean',\n  'client_bureau_balance_STATUS_5_count_mean'],\n 'client_bureau_balance_STATUS_5_count_norm_max': ['client_bureau_balance_STATUS_5_count_norm_max',\n  'client_bureau_balance_STATUS_5_count_max'],\n 'client_bureau_balance_STATUS_5_count_norm_min': ['client_bureau_balance_STATUS_5_count_norm_min',\n  'client_bureau_balance_STATUS_5_count_min'],\n 'client_bureau_balance_STATUS_5_count_norm_sum': ['client_bureau_balance_STATUS_5_count_norm_sum',\n  'client_bureau_balance_STATUS_5_count_sum'],\n 'client_bureau_balance_STATUS_C_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_C_count_mean': ['client_bureau_balance_STATUS_C_count_norm_mean',\n  'client_bureau_balance_STATUS_C_count_mean'],\n 'client_bureau_balance_STATUS_C_count_max': ['client_bureau_balance_STATUS_C_count_max',\n  'client_bureau_balance_MONTHS_BALANCE_count_max'],\n 'client_bureau_balance_STATUS_C_count_min': ['client_bureau_balance_STATUS_C_count_min',\n  'client_bureau_balance_STATUS_C_count_norm_min'],\n 'client_bureau_balance_STATUS_C_count_sum': ['client_bureau_balance_STATUS_C_count_norm_sum',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum',\n  'client_bureau_balance_STATUS_C_count_sum'],\n 'client_bureau_balance_STATUS_C_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_C_count_norm_mean': ['client_bureau_balance_STATUS_C_count_norm_mean',\n  'client_bureau_balance_STATUS_C_count_mean'],\n 'client_bureau_balance_STATUS_C_count_norm_max': ['client_bureau_balance_STATUS_C_count_norm_max'],\n 'client_bureau_balance_STATUS_C_count_norm_min': ['client_bureau_balance_STATUS_C_count_min',\n  'client_bureau_balance_STATUS_C_count_norm_min'],\n 'client_bureau_balance_STATUS_C_count_norm_sum': ['client_bureau_balance_STATUS_C_count_norm_sum',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_STATUS_C_count_sum'],\n 'client_bureau_balance_STATUS_X_count_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_X_count_mean': ['client_bureau_balance_STATUS_X_count_mean'],\n 'client_bureau_balance_STATUS_X_count_max': ['client_bureau_balance_STATUS_X_count_sum',\n  'client_bureau_balance_STATUS_X_count_max'],\n 'client_bureau_balance_STATUS_X_count_min': ['client_bureau_balance_STATUS_X_count_min'],\n 'client_bureau_balance_STATUS_X_count_sum': ['client_bureau_balance_STATUS_X_count_norm_sum',\n  'client_bureau_balance_STATUS_X_count_sum',\n  'client_bureau_balance_STATUS_X_count_max'],\n 'client_bureau_balance_STATUS_X_count_norm_count': ['bureau_AMT_ANNUITY_count',\n  'bureau_AMT_CREDIT_SUM_DEBT_count',\n  'client_bureau_balance_STATUS_1_count_count',\n  'client_bureau_balance_STATUS_3_count_count',\n  'client_bureau_balance_STATUS_X_count_count',\n  'client_bureau_balance_STATUS_C_count_count',\n  'client_bureau_balance_STATUS_5_count_norm_count',\n  'client_bureau_balance_STATUS_X_count_norm_count',\n  'client_bureau_balance_STATUS_5_count_count',\n  'client_bureau_balance_STATUS_4_count_norm_count',\n  'client_bureau_balance_STATUS_4_count_count',\n  'client_bureau_balance_STATUS_3_count_norm_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_count',\n  'client_bureau_balance_STATUS_2_count_norm_count',\n  'client_bureau_balance_STATUS_2_count_count',\n  'client_bureau_balance_STATUS_1_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_norm_count',\n  'client_bureau_balance_STATUS_0_count_count',\n  'client_bureau_balance_MONTHS_BALANCE_sum_count',\n  'client_bureau_balance_MONTHS_BALANCE_min_count',\n  'client_bureau_balance_MONTHS_BALANCE_max_count',\n  'client_bureau_balance_MONTHS_BALANCE_mean_count',\n  'client_bureau_balance_STATUS_C_count_norm_count',\n  'bureau_CREDIT_CURRENCY_currency 1_count',\n  'bureau_AMT_CREDIT_SUM_count',\n  'bureau_CNT_CREDIT_PROLONG_count',\n  'bureau_DAYS_CREDIT_UPDATE_count',\n  'bureau_AMT_CREDIT_SUM_OVERDUE_count',\n  'bureau_CREDIT_DAY_OVERDUE_count',\n  'bureau_DAYS_CREDIT_count',\n  'bureau_AMT_CREDIT_SUM_LIMIT_count',\n  'bureau_DAYS_CREDIT_ENDDATE_count',\n  'bureau_CREDIT_TYPE_Consumer credit_count',\n  'bureau_DAYS_ENDDATE_FACT_count',\n  'bureau_CREDIT_ACTIVE_Closed_count',\n  'client_bureau_balance_MONTHS_BALANCE_count_sum'],\n 'client_bureau_balance_STATUS_X_count_norm_mean': ['client_bureau_balance_STATUS_X_count_norm_mean'],\n 'client_bureau_balance_STATUS_X_count_norm_max': ['client_bureau_balance_STATUS_X_count_norm_max'],\n 'client_bureau_balance_STATUS_X_count_norm_min': ['client_bureau_balance_STATUS_X_count_norm_min'],\n 'client_bureau_balance_STATUS_X_count_norm_sum': ['client_bureau_balance_STATUS_X_count_norm_sum',\n  'client_bureau_balance_STATUS_X_count_sum'],\n 'TARGET': ['TARGET']}"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"cols_to_remove = []\ncols_seen = []\ncols_to_remove_pair = []\nfor key,value in above_threshold_vars.items():\n    cols_seen.append(key)\n    for x in value:\n        if x == key:\n            next\n        else:\n            if x not in cols_seen:\n                cols_to_remove.append(x)\n                cols_to_remove_pair.append(x)\n\ncols_to_remove = list(set(cols_to_remove))\nprint(len(cols_to_remove))","execution_count":209,"outputs":[{"output_type":"stream","text":"133\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_rem = train_app.drop(columns = cols_to_remove)","execution_count":210,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_rem = test_app.drop(columns = cols_to_remove)","execution_count":211,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_rem.shape","execution_count":212,"outputs":[{"output_type":"execute_result","execution_count":212,"data":{"text/plain":"(307511, 200)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_rem.shape","execution_count":213,"outputs":[{"output_type":"execute_result","execution_count":213,"data":{"text/plain":"(48744, 199)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_rem.to_csv('train_rem.csv',index = False)","execution_count":214,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_rem.shape","execution_count":215,"outputs":[{"output_type":"execute_result","execution_count":215,"data":{"text/plain":"(307511, 200)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_rem.to_csv('test_rem.csv',index = False)","execution_count":216,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"import lightgbm as lgb\nimport gc","execution_count":226,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"from sklearn.model_selection import KFold\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.preprocessing import LabelEncoder","execution_count":218,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"def model(features,test_features,encoding = 'ohe',n_folds = 5):\n    train_ids = features['SK_ID_CURR']\n    test_ids = test_features['SK_ID_CURR']\n    labels = features['TARGET']\n    features = features.drop(columns = ['SK_ID_CURR','TARGET'])\n    test_features = test_features.drop(columns = ['SK_ID_CURR'])\n    if encoding == 'ohe':\n        features = pd.get_dummies(features)\n        test_features = pd.get_dummies(test_features)\n        # align both features and test_features\n        features,test_features = features.align(test_features,join = 'inner',axis = 1)\n        cat_indices = 'auto'\n    elif encoding == 'le':\n        cat_indices = []\n        label_encoder = LabelEncoder()\n        for i,col in enumerate(features):\n            if features[col].dtype == 'object':\n                features[col] = label_encoder.fit_transform(np.array(features[col].astype(str)).reshape((-1,)))\n                test_features[col] = label_encoder.transform(np.array(test_features[col].astype(str)).reshape((-1,)))\n                cat_indices.append(i)\n    else:\n        raise ValueError(\"Encoding must be either ohe or le\")\n        \n    print('Training Data shape :', features.shape)\n    print('Testing Data shape: ', test_features.shape)\n    feature_names = list(features.columns)\n    features = np.array(features)\n    test_features = np.array(test_features)\n    k_fold = KFold(n_splits = n_folds,shuffle = False,random_state = 50)\n    feature_importance_values = np.zeros(len(feature_names))\n    test_predictions = np.zeros(test_features.shape[0])\n    valid_scores = []\n    train_scores = []\n    out_of_fold = np.zeros(features.shape[0])\n    for train_indices,valid_indices in k_fold.split(features):\n        train_features,train_labels = features[train_indices],labels[train_indices]\n        valid_features,valid_labels = features[valid_indices],labels[valid_indices]\n        modell = lgb.LGBMClassifier(n_estimators = 100,objective = 'binary',class_weight = 'balanced',learning_rate = 0.05,\n                                   reg_alpha = 0.1,reg_lambda = 0.1,subsample = 0.8,n_jobs = -1, random_state = 50)\n        # training the model\n        modell.fit(train_features,train_labels,eval_metric = 'auc',eval_set = [(valid_features,valid_labels),(train_features,train_labels)],\n                  eval_names = ['valid','train'],categorical_feature = cat_indices,early_stopping_rounds = 100,verbose = 200)\n        #record the best iteration\n        best_iteration = modell.best_iteration_\n        feature_importance_values += modell.feature_importances_ / k_fold.n_splits\n        \n        #make predictions\n        test_predictions += modell.predict_proba(test_features,num_iteration = best_iteration)[:,1] / k_fold.n_splits\n        out_of_fold[valid_indices] = modell.predict_proba(valid_features,num_iteration = best_iteration)[:,1]\n        valid_score = modell.best_score_['valid']['auc']\n        train_score = modell.best_score_['train']['auc']\n        valid_scores.append(valid_score)\n        train_scores.append(train_score)\n        gc.enable()\n        del modell,train_features,valid_features\n        gc.collect\n    submission = pd.DataFrame({'SK_ID_CURR':test_ids,'TARGET':test_predictions})\n    feature_importances = pd.DataFrame({'feature':feature_names,'importance':feature_importance_values})\n    valid_auc = roc_auc_score(labels,out_of_fold)\n    valid_scores.append(valid_auc)\n    train_scores.append(np.mean(train_scores))\n    fold_names = list(range(n_folds))\n    fold_names.append('overall')\n    metrics = pd.DataFrame({'fold':fold_names,'train':train_scores,'valid':valid_scores})\n    return submission,feature_importances,metrics","execution_count":227,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"submission,fi,metrics = model(train_app,test_app)","execution_count":228,"outputs":[{"output_type":"stream","text":"Training Data shape : (307511, 452)\nTesting Data shape:  (48744, 452)\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.786004\ttrain's binary_logloss: 0.563235\tvalid's auc: 0.761558\tvalid's binary_logloss: 0.570248\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.785595\ttrain's binary_logloss: 0.563528\tvalid's auc: 0.76139\tvalid's binary_logloss: 0.574559\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.786999\ttrain's binary_logloss: 0.562244\tvalid's auc: 0.755364\tvalid's binary_logloss: 0.571313\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.78498\ttrain's binary_logloss: 0.564219\tvalid's auc: 0.762994\tvalid's binary_logloss: 0.570049\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.785739\ttrain's binary_logloss: 0.563389\tvalid's auc: 0.762371\tvalid's binary_logloss: 0.570405\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def plot_feature_importance(df):\n    df = df.sort_values('importance',ascending = False).reset_index()\n    df['importance_normalized'] = df['importance'] / (df['importance'].sum())\n    plt.figure(figsize = (10,8))\n    ax = plt.subplot()\n    ax.barh(list(reversed(list(df.index[:16]))),df['importance_normalized'].head(16),align = 'center',edgecolor = 'k')\n    ax.set_yticks(list(reversed(list(df.index[:16]))))\n    ax.set_yticklabels(df['feature'].head(16))\n    plt.xlabel('Normalized Importance')\n    plt.show()\n    return df","execution_count":229,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"plot_feature_importance(fi)","execution_count":230,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 720x576 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"execute_result","execution_count":230,"data":{"text/plain":"     index                                            feature  importance  \\\n0       27                                       EXT_SOURCE_1       300.0   \n1       28                                       EXT_SOURCE_2       236.8   \n2       29                                       EXT_SOURCE_3       208.8   \n3        6                                         DAYS_BIRTH       167.0   \n4        2                                         AMT_CREDIT       152.8   \n..     ...                                                ...         ...   \n447    155                    bureau_CREDIT_DAY_OVERDUE_count         0.0   \n448    322                                  FLAG_OWN_REALTY_Y         0.0   \n449    149  bureau_CREDIT_TYPE_Unknown type of loan_count_...         0.0   \n450    148      bureau_CREDIT_TYPE_Unknown type of loan_count         0.0   \n451    451                            EMERGENCYSTATE_MODE_Yes         0.0   \n\n     importance_normalized  \n0                 0.100000  \n1                 0.078933  \n2                 0.069600  \n3                 0.055667  \n4                 0.050933  \n..                     ...  \n447               0.000000  \n448               0.000000  \n449               0.000000  \n450               0.000000  \n451               0.000000  \n\n[452 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>feature</th>\n      <th>importance</th>\n      <th>importance_normalized</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>27</td>\n      <td>EXT_SOURCE_1</td>\n      <td>300.0</td>\n      <td>0.100000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>28</td>\n      <td>EXT_SOURCE_2</td>\n      <td>236.8</td>\n      <td>0.078933</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>29</td>\n      <td>EXT_SOURCE_3</td>\n      <td>208.8</td>\n      <td>0.069600</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>DAYS_BIRTH</td>\n      <td>167.0</td>\n      <td>0.055667</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>AMT_CREDIT</td>\n      <td>152.8</td>\n      <td>0.050933</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>447</th>\n      <td>155</td>\n      <td>bureau_CREDIT_DAY_OVERDUE_count</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>448</th>\n      <td>322</td>\n      <td>FLAG_OWN_REALTY_Y</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>449</th>\n      <td>149</td>\n      <td>bureau_CREDIT_TYPE_Unknown type of loan_count_...</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>450</th>\n      <td>148</td>\n      <td>bureau_CREDIT_TYPE_Unknown type of loan_count</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>451</th>\n      <td>451</td>\n      <td>EMERGENCYSTATE_MODE_Yes</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>452 rows × 4 columns</p>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"metrics","execution_count":231,"outputs":[{"output_type":"execute_result","execution_count":231,"data":{"text/plain":"      fold     train     valid\n0        0  0.786004  0.761558\n1        1  0.785595  0.761390\n2        2  0.786999  0.755364\n3        3  0.784980  0.762994\n4        4  0.785739  0.762371\n5  overall  0.785863  0.760729","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fold</th>\n      <th>train</th>\n      <th>valid</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.786004</td>\n      <td>0.761558</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.785595</td>\n      <td>0.761390</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.786999</td>\n      <td>0.755364</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.784980</td>\n      <td>0.762994</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.785739</td>\n      <td>0.762371</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>overall</td>\n      <td>0.785863</td>\n      <td>0.760729</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"submission.to_csv('sub1.csv',index=False)","execution_count":232,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"train.shape","execution_count":233,"outputs":[{"output_type":"execute_result","execution_count":233,"data":{"text/plain":"(307511, 440)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"train_rem = pd.read_csv('../input/train-rem/train_rem (1).csv')","execution_count":234,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"test_rem = pd.read_csv('../input/test-rem/test_rem (1).csv')","execution_count":235,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"submission,fi,metrics = model(train_rem,test_rem)","execution_count":236,"outputs":[{"output_type":"stream","text":"Training Data shape : (307511, 319)\nTesting Data shape:  (48744, 319)\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.782446\ttrain's binary_logloss: 0.566104\tvalid's auc: 0.758557\tvalid's binary_logloss: 0.572993\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.782671\ttrain's binary_logloss: 0.565956\tvalid's auc: 0.759088\tvalid's binary_logloss: 0.576756\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.784072\ttrain's binary_logloss: 0.56463\tvalid's auc: 0.751401\tvalid's binary_logloss: 0.573993\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.78219\ttrain's binary_logloss: 0.566619\tvalid's auc: 0.759939\tvalid's binary_logloss: 0.572661\nTraining until validation scores don't improve for 100 rounds\nDid not meet early stopping. Best iteration is:\n[100]\ttrain's auc: 0.78259\ttrain's binary_logloss: 0.565937\tvalid's auc: 0.758906\tvalid's binary_logloss: 0.573334\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"metrics","execution_count":237,"outputs":[{"output_type":"execute_result","execution_count":237,"data":{"text/plain":"      fold     train     valid\n0        0  0.782446  0.758557\n1        1  0.782671  0.759088\n2        2  0.784072  0.751401\n3        3  0.782190  0.759939\n4        4  0.782590  0.758906\n5  overall  0.782794  0.757567","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fold</th>\n      <th>train</th>\n      <th>valid</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.782446</td>\n      <td>0.758557</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.782671</td>\n      <td>0.759088</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.784072</td>\n      <td>0.751401</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.782190</td>\n      <td>0.759939</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.782590</td>\n      <td>0.758906</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>overall</td>\n      <td>0.782794</td>\n      <td>0.757567</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"submission.to_csv('sub2.csv',index=False)","execution_count":238,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat":4,"nbformat_minor":4}